{"version":3,"sources":["webpack:///src/app/buy-product/buy-product.component.ts","webpack:///src/app/buy-product/buy-product.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/app/buy-product-resolver.service.ts","webpack:///src/app/show-product-images-dialog/show-product-images-dialog.component.ts","webpack:///src/app/show-product-images-dialog/show-product-images-dialog.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/product-resolve.service.ts","webpack:///src/app/show-product-details/show-product-details.component.ts","webpack:///src/app/show-product-details/show-product-details.component.html","webpack:///src/app/add-new-product/add-new-product.component.html","webpack:///src/app/add-new-product/add-new-product.component.ts","webpack:///src/app/order-details/order-details.component.html","webpack:///src/app/order-details/order-details.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/_auth/auth.guard.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/drag.directive.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/_services/user-auth.service.ts","webpack:///src/app/order-confirmation/order-confirmation.component.ts","webpack:///src/app/order-confirmation/order-confirmation.component.html","webpack:///src/app/product-view-details/product-view-details.component.html","webpack:///src/app/product-view-details/product-view-details.component.ts","webpack:///src/app/forbidden/forbidden.component.ts","webpack:///src/app/forbidden/forbidden.component.html","webpack:///src/app/my-orders/my-orders.component.html","webpack:///src/app/my-orders/my-orders.component.ts","webpack:///src/app/_services/product.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/image-processing.service.ts","webpack:///src/main.ts","webpack:///src/app/_auth/auth.interceptor.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["BuyProductComponent","activatedRoute","productService","router","injector","isSingleProductCheckout","productDetails","orderDetails","fullName","fullAddress","contactNumber","alternateContactNumber","transactionId","orderProductQuantityList","snapshot","data","paramMap","get","forEach","x","push","productId","quantity","console","log","orderForm","placeOrder","subscribe","resp","reset","ngZone","run","navigate","err","filteredProduct","filter","productQuantity","productDiscountedPrice","q","orderProduct","grandTotal","price","product","amount","getCalculatedGrandTotal","createTransaction","response","openTransactioModal","error","options","order_id","orderId","key","currency","name","description","image","handler","razorpay_payment_id","processResponse","alert","prefill","email","contact","notes","address","theme","color","razorPayObject","Razorpay","open","createTransactionAndPlaceOrder","RegisterComponent","userService","registerForm","value","register","UserComponent","forUser","message","BuyProductResolverService","productServcice","imageProcessingService","route","state","id","getProductDetails","pipe","i","map","createImages","ShowProductImagesDialogComponent","receiveImages","HomeComponent","images","currentSlideIndex","pageNumber","showLoadButton","length","getAllProducts","searchkeyword","searchKey","p","prevSlide","nextSlide","searchByKeyword","environment","production","ProductResolveService","getProductDetailsById","productName","productDescription","productActualPrice","productImages","ShowProductDetailsComponent","imagesDialog","showLoadMoreProductButton","showTable","displayedColumns","searchKeyword","deleteProduct","height","width","AddNewProductComponent","sanitizer","isNewProduct","productForm","formData","prepareFormDataForProduct","addProduct","uploadImageData","FormData","append","Blob","JSON","stringify","type","file","event","target","files","fileHandle","url","bypassSecurityTrustUrl","window","URL","createObjectURL","splice","fileDropped","onFileSelected","OrderDetailsComponent","dataSource","status","getAllOrderDetailsForAdmin","statusParameter","markAsDelivered","AppComponent","title","AdminComponent","AuthGuard","userAuthService","getToken","role","match","roleMatch","UserService","httpclient","PATH_OF_API","requestHeader","registerData","post","loginData","headers","responseType","allowedRoles","isMatch","userRoles","getRoles","j","roleName","AppModule","provide","useClass","multi","CartComponent","cartDetails","getCartDetails","cartId","deleteCartItem","checkout","DragDirective","background","evt","preventDefault","stopPropagation","dataTransfer","emit","HeaderComponent","isLoggedIn","clear","isAdmin","isUser","UserAuthService","roles","localStorage","setItem","parse","getItem","jwtToken","OrderConfirmationComponent","ProductViewDetailsComponent","selectedProductIndex","addToCart","index","buyProduct","ForbiddenComponent","MyOrdersComponent","myOrderDetails","getOrderDetails","getMyOrders","ProductService","httpClient","isCartCheckout","routes","path","component","canActivate","resolve","AppRoutingModule","forRoot","relativeLinkResolution","LoginComponent","loginForm","login","setRoles","user","setToken","registerUser","ImageProcessingService","productImagesToFileHandle","imageFileData","imageBlob","dataURItoBlob","picByte","imageFile","File","finalFileHandle","picBytes","imageType","byteString","atob","arrayBuffer","ArrayBuffer","int8Array","Uint8Array","charCodeAt","blob","bootstrapModule","AuthInterceptor","req","next","handle","clone","token","addToken","request","setHeaders","Authorization","webpackEmptyAsyncContext","Promise","then","e","Error","code","keys","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC6DwB;;AACI;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAkC;;AACtC;;AACI;;AAIA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEI;;AAAkB;;AAAC;;AACnB;;AAAkB;;AAAC;;AACnB;;AAAkB;;AAAC;;AACvB;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;;;;;;;AAjBQ;;AAAA;;AACA;;AAAA;;AAKA;;AAAA;;AASA;;AAAA;;;;UD/DnBA,mB;AAcX,qCAAoBC,cAApB,EACUC,cADV,EAEUC,MAFV,EAGUC,QAHV,EAG8B;AAAA;;AAHV,eAAAH,cAAA,GAAAA,cAAA;AACV,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AAfV,eAAAC,uBAAA,GAAkC,EAAlC;AACA,eAAAC,cAAA,GAA4B,EAA5B;AAEA,eAAAC,YAAA,GAA6B;AAC3BC,oBAAQ,EAAE,EADiB;AAE3BC,uBAAW,EAAE,EAFc;AAG3BC,yBAAa,EAAE,EAHY;AAI3BC,kCAAsB,EAAE,EAJG;AAK3BC,yBAAa,EAAE,EALY;AAM3BC,oCAAwB,EAAE;AANC,WAA7B;AAYiC;;;;iBAEjC,oBAAQ;AAAA;;AACN,iBAAKP,cAAL,GAAsB,KAAKL,cAAL,CAAoBa,QAApB,CAA6BC,IAA7B,CAAkC,gBAAlC,CAAtB;AACA,iBAAKV,uBAAL,GAA+B,KAAKJ,cAAL,CAAoBa,QAApB,CAA6BE,QAA7B,CAAsCC,GAAtC,CAA0C,yBAA1C,CAA/B;AAEA,iBAAKX,cAAL,CAAoBY,OAApB,CACE,UAAAC,CAAC;AAAA,qBAAI,KAAI,CAACZ,YAAL,CAAkBM,wBAAlB,CAA2CO,IAA3C,CACH;AAACC,yBAAS,EAAEF,CAAC,CAACE,SAAd;AAAyBC,wBAAQ,EAAE;AAAnC,eADG,CAAJ;AAAA,aADH;AAMAC,mBAAO,CAACC,GAAR,CAAY,KAAKlB,cAAjB;AACAiB,mBAAO,CAACC,GAAR,CAAY,KAAKjB,YAAjB;AACD;;;iBAEM,oBAAWkB,SAAX,EAA8B;AAAA;;AACnC,iBAAKvB,cAAL,CAAoBwB,UAApB,CAA+B,KAAKnB,YAApC,EAAkD,KAAKF,uBAAvD,EAAgFsB,SAAhF,CACE,UAACC,IAAD,EAAU;AACRL,qBAAO,CAACC,GAAR,CAAYI,IAAZ;AACAH,uBAAS,CAACI,KAAV;;AAEA,kBAAMC,MAAM,GAAG,MAAI,CAAC1B,QAAL,CAAca,GAAd,CAAkB,oDAAlB,CAAf;;AACAa,oBAAM,CAACC,GAAP,CACE,YAAM;AACJ,sBAAI,CAAC5B,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD,eAHH;AAKD,aAXH,EAYE,UAACC,GAAD,EAAS;AACPV,qBAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,aAdH;AAgBD;;;iBAGD,+BAAsBZ,SAAtB,EAAiC;AAC/B,gBAAMa,eAAe,GAAG,KAAK3B,YAAL,CAAkBM,wBAAlB,CAA2CsB,MAA3C,CACtB,UAACC,eAAD;AAAA,qBAAqBA,eAAe,CAACf,SAAhB,KAA8BA,SAAnD;AAAA,aADsB,CAAxB;AAIA,mBAAOa,eAAe,CAAC,CAAD,CAAf,CAAmBZ,QAA1B;AACD;;;iBAED,4BAAmBD,SAAnB,EAA8BgB,sBAA9B,EAAsD;AACpD,gBAAMH,eAAe,GAAG,KAAK3B,YAAL,CAAkBM,wBAAlB,CAA2CsB,MAA3C,CACtB,UAACC,eAAD;AAAA,qBAAqBA,eAAe,CAACf,SAAhB,KAA8BA,SAAnD;AAAA,aADsB,CAAxB;AAIA,mBAAOa,eAAe,CAAC,CAAD,CAAf,CAAmBZ,QAAnB,GAA8Be,sBAArC;AACD;;;iBAED,2BAAkBC,CAAlB,EAAqBjB,SAArB,EAAgC;AAC9B,iBAAKd,YAAL,CAAkBM,wBAAlB,CAA2CsB,MAA3C,CACE,UAACI,YAAD;AAAA,qBAAkBA,YAAY,CAAClB,SAAb,KAA2BA,SAA7C;AAAA,aADF,EAEE,CAFF,EAEKC,QAFL,GAEgBgB,CAFhB;AAGD;;;iBAED,mCAA0B;AAAA;;AACxB,gBAAIE,UAAU,GAAG,CAAjB;AAEA,iBAAKjC,YAAL,CAAkBM,wBAAlB,CAA2CK,OAA3C,CACE,UAACkB,eAAD,EAAqB;AACnB,kBAAMK,KAAK,GAAG,MAAI,CAACnC,cAAL,CAAoB6B,MAApB,CAA2B,UAAAO,OAAO;AAAA,uBAAIA,OAAO,CAACrB,SAAR,KAAsBe,eAAe,CAACf,SAA1C;AAAA,eAAlC,EAAuF,CAAvF,EAA0FgB,sBAAxG;;AACAG,wBAAU,GAAGA,UAAU,GAAGC,KAAK,GAAGL,eAAe,CAACd,QAAlD;AACD,aAJH;AAOA,mBAAOkB,UAAP;AACD;;;iBAED,wCAA+Bf,SAA/B,EAAkD;AAAA;;AAChD,gBAAIkB,MAAM,GAAG,KAAKC,uBAAL,EAAb;AACA,iBAAK1C,cAAL,CAAoB2C,iBAApB,CAAsCF,MAAtC,EAA8ChB,SAA9C,CACE,UAACmB,QAAD,EAAc;AACZvB,qBAAO,CAACC,GAAR,CAAYsB,QAAZ;;AACA,oBAAI,CAACC,mBAAL,CAAyBD,QAAzB,EAAmCrB,SAAnC;AACD,aAJH,EAKE,UAACuB,KAAD,EAAW;AACTzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aAPH;AAUD;;;iBAED,6BAAoBF,QAApB,EAAmCrB,SAAnC,EAAsD;AAAA;;AACpD,gBAAIwB,OAAO,GAAG;AACZC,sBAAQ,EAAEJ,QAAQ,CAACK,OADP;AAEZC,iBAAG,EAAEN,QAAQ,CAACM,GAFF;AAGZT,oBAAM,EAAEG,QAAQ,CAACH,MAHL;AAIZU,sBAAQ,EAAEP,QAAQ,CAACO,QAJP;AAKZC,kBAAI,EAAE,4BALM;AAMZC,yBAAW,EAAE,4BAND;AAOZC,mBAAK,EAAE,sEAPK;AAQZC,qBAAO,EAAE,iBAACX,QAAD,EAAmB;AAC1B,oBAAGA,QAAQ,IAAG,IAAX,IAAmBA,QAAQ,CAACY,mBAAT,IAAgC,IAAtD,EAA4D;AAC1D,wBAAI,CAACC,eAAL,CAAqBb,QAArB,EAA+BrB,SAA/B;AACD,iBAFD,MAEO;AACLmC,uBAAK,CAAC,kBAAD,CAAL;AACD;AAEF,eAfW;AAgBZC,qBAAO,EAAG;AACRP,oBAAI,EAAC,KADG;AAERQ,qBAAK,EAAE,eAFC;AAGRC,uBAAO,EAAE;AAHD,eAhBE;AAqBZC,mBAAK,EAAE;AACLC,uBAAO,EAAE;AADJ,eArBK;AAwBZC,mBAAK,EAAE;AACLC,qBAAK,EAAE;AADF;AAxBK,aAAd;AA6BA,gBAAIC,cAAc,GAAG,IAAIC,QAAJ,CAAapB,OAAb,CAArB;AACAmB,0BAAc,CAACE,IAAf;AACD;;;iBAED,yBAAgB1C,IAAhB,EAA2BH,SAA3B,EAA6C;AAC3C,iBAAKlB,YAAL,CAAkBK,aAAlB,GAAkCgB,IAAI,CAAC8B,mBAAvC;AACA,iBAAKhC,UAAL,CAAgBD,SAAhB;AACD;;;;;;;yBA3IUzB,mB,EAAmB,+H,EAAA,yI,EAAA,uH,EAAA,uH;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,e;AAAA,i2B;AAAA;AAAA;;;ACdhC;;AACI;;AACI;;AACI;;AAEI;;AACM;AAAA;;AAAA;;AAAA,qBAAY,IAAAuE,8BAAA,KAAZ;AAAqD,aAArD;;AAEF;;AAEI;;AAAW;;AAAS;;AACpB;;AAEO;AAAA;AAAA;;AAFP;;AAIJ;;AAEA;;AAEI;;AAAW;;AAAY;;AACvB;;AAEO;AAAA;AAAA;;AAFP;;AAIJ;;AAEA;;AAEI;;AAAW;;AAAc;;AACzB;;AAEO;AAAA;AAAA;;AAFP;;AAIJ;;AAEA;;AAEI;;AAAW;;AAAwB;;AACnC;;AAEO;AAAA;AAAA;;AAFP;;AAIJ;;AAEA;;AACI;;AAAyD;;AAAW;;AACxE;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAK;;AACb;;AACJ;;AACA;;AACI;;AAoBA;;AACI;;AACA;;AACA;;AAAI;;AAAK;;AACT;;AAAK;;AAA8B;;AACvC;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA/E+B;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAqBiB;;AAAA;;AAwBf;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC3EpBC,iB;AAEX,mCAAoBC,WAApB,EACUtE,MADV,EAC0B;AAAA;;AADN,eAAAsE,WAAA,GAAAA,WAAA;AACV,eAAAtE,MAAA,GAAAA,MAAA;AAAmB;;;;iBAE7B,oBAAQ,CACP;;;iBAED,kBAASuE,YAAT,EAA+B;AAAA;;AAC7BnD,mBAAO,CAACC,GAAR,CAAYkD,YAAY,CAACC,KAAzB;AACA,iBAAKF,WAAL,CAAiBG,QAAjB,CAA0BF,YAAY,CAACC,KAAvC,EAA8ChD,SAA9C,CACE,UAACmB,QAAD,EAAc;AACZ,oBAAI,CAAC3C,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,aAHH,EAIE,UAACgB,KAAD,EAAW;AACTzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aANH;AAQD;;;;;;;yBAlBUwB,iB,EAAiB,mI,EAAA,uH;AAAA,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,ypB;AAAA;AAAA;;;ACV9B;;AACI;;AACI;;AAA6B;AAAA;;AAAA;;AAAA,qBAAY,IAAAI,QAAA,KAAZ;AAAkC,aAAlC;;AACzB;;AACI;;AAAW;;AAAQ;;AACnB;;AAKA;;AAAU;;AAAQ;;AACtB;;AAEA;;AACI;;AAAW;;AAAS;;AACpB;;AAKA;;AAAU;;AAAS;;AACvB;;AAEA;;AACI;;AAAW;;AAAQ;;AACnB;;AAKA;;AAAU;;AAAQ;;AACtB;;AAEA;;AACI;;AAAW;;AAAQ;;AACnB;;AAKA;;AAAU;;AAAQ;;AACtB;;AAEA;;AACI;;AAAwD;;AAAQ;;AACpE;;AAEJ;;AACJ;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCzCaC,a;AAGX,+BAAoBJ,WAApB,EAA8C;AAAA;;AAA1B,eAAAA,WAAA,GAAAA,WAAA;AAA6B;;;;iBAEjD,oBAAQ;AACN,iBAAKK,OAAL;AACD;;;iBAED,mBAAU;AAAA;;AACR,iBAAKL,WAAL,CAAiBK,OAAjB,GAA2BnD,SAA3B,CACE,UAACmB,QAAD,EAAc;AACZvB,qBAAO,CAACC,GAAR,CAAYsB,QAAZ;AACA,oBAAI,CAACiC,OAAL,GAAejC,QAAf;AACD,aAJH,EAKE,UAACE,KAAD,EAAS;AACPzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aAPH;AASD;;;;;;;yBAnBU6B,a,EAAa,mI;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,gB;AAAA,e;AAAA,4G;AAAA;AAAA;ACR1B;;AACI;;AACI;;AAAI;;AAAY;;AAChB;;AAAI;;AAAW;;AACnB;;AACJ;;;;AAFY;;AAAA;;;;;;;;;;;;;;;;;;;;ACAZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaG,yB;AAEX;AAEA,2CAAoBC,eAApB,EACUC,sBADV,EAC0D;AAAA;;AADtC,eAAAD,eAAA,GAAAA,eAAA;AACV,eAAAC,sBAAA,GAAAA,sBAAA;AAEP;;;;iBAEH,iBAAQC,KAAR,EAAuCC,KAAvC,EAAiE;AAAA;;AAE/D,gBAAMC,EAAE,GAAGF,KAAK,CAACnE,QAAN,CAAeC,GAAf,CAAmB,IAAnB,CAAX;AACA,gBAAMZ,uBAAuB,GAAG8E,KAAK,CAACnE,QAAN,CAAeC,GAAf,CAAmB,yBAAnB,CAAhC;AACA,mBAAO,KAAKgE,eAAL,CAAqBK,iBAArB,CAAuCjF,uBAAvC,EAAgEgF,EAAhE,EACJE,IADI,CAEH,2DACE,UAACpE,CAAD,EAAeqE,CAAf;AAAA,qBAAqBrE,CAAC,CAACsE,GAAF,CAAM,UAAC/C,OAAD;AAAA,uBAAsB,MAAI,CAACwC,sBAAL,CAA4BQ,YAA5B,CAAyChD,OAAzC,CAAtB;AAAA,eAAN,CAArB;AAAA,aADF,CAFG,CAAP;AAMD;;;;;;;yBAnBUsC,yB,EAAyB,gI,EAAA,wI;AAAA,O;;;eAAzBA,yB;AAAyB,iBAAzBA,yBAAyB,K;AAAA,oBAFxB;;;;;;;;;;;;;;;;;ACRd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAI;;AACI;;AACJ;;;;;;AADS;;AAAA;;;;UDOAW,gC;AAEX,kDAA4C5E,IAA5C,EAAuD;AAAA;;AAAX,eAAAA,IAAA,GAAAA,IAAA;AAAc;;;;iBAE1D,oBAAQ;AACN,iBAAK6E,aAAL;AACD;;;iBAED,yBAAgB;AACdrE,mBAAO,CAACC,GAAR,CAAY,KAAKT,IAAjB;AACD;;;;;;;yBAVU4E,gC,EAAgC,gEAEvB,wEAFuB,C;AAER,O;;;cAFxBA,gC;AAAgC,uD;AAAA,gB;AAAA,e;AAAA,6H;AAAA;AAAA;ACT7C;;AACI;;AAGJ;;;;AAH0C;;AAAA;;;;;;;;;;;;;;;;;;;;;ACE1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEK;;;;;;AAAgD;;AAAyB;;;;;;AAGzE;;AACE;;AACF;;;;;;;AAFuE;;AAC1C;;AAAA,iJAAa,KAAb,EAAa,qBAAb;;;;;;;;AA6B5B;;AACG;;AACG;;AACG;;AACH;;AACA;;AACG;;AAAG;;AAAG;;AAAiB;;AAAI;;AAC9B;;AACA;;AACG;;AACG;;AAEK;;AACX;;AACA;;AACG;;AAAG;;AAAgC;;AAAK;;AAAO;;AACL;;AAAwB;;AACrE;;AACA;;AACG;;AAAqD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AACrF;;AACb;;AACH;;AACH;;;;;;AApB8C;;AAAA;;AAG/B;;AAAA;;AASH;;AAAA;;AACuC;;AAAA;;;;;;;;AAUtD;;AACG;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAS;;AACjG;;;;UDrDUE,a;AAwBX,+BAAoB3F,cAApB,EACUgF,sBADV,EAEU/E,MAFV,EAE0B;AAAA;;AAFN,eAAAD,cAAA,GAAAA,cAAA;AACV,eAAAgF,sBAAA,GAAAA,sBAAA;AACA,eAAA/E,MAAA,GAAAA,MAAA;AAzBV,eAAA2F,MAAA,GAAmB,CACjB,+GADiB,EAEjB,+GAFiB,EAGjB,+GAHiB,CAAnB;AAKA,eAAAC,iBAAA,GAA4B,CAA5B;AAYA,eAAAC,UAAA,GAAqB,CAArB;AAEA,eAAA1F,cAAA,GAAiB,EAAjB;AAEA,eAAA2F,cAAA,GAAiB,KAAjB;AAI6B;;;;iBAlB7B,qBAAY;AACV;AACA,iBAAKF,iBAAL,GAAyB,CAAC,KAAKA,iBAAL,GAAyB,CAA1B,IAA+B,KAAKD,MAAL,CAAYI,MAApE;AACD;;;iBAED,qBAAY;AACV;AACA,iBAAKH,iBAAL,GAAyB,CAAC,KAAKA,iBAAL,GAAyB,CAAzB,GAA6B,KAAKD,MAAL,CAAYI,MAA1C,IAAoD,KAAKJ,MAAL,CAAYI,MAAzF;AACD;;;iBAYD,oBAAQ;AACN,iBAAKC,cAAL;AACD;;;iBAED,yBAAgBC,aAAhB,EAA+B;AAC7B7E,mBAAO,CAACC,GAAR,CAAY4E,aAAZ;AACA,iBAAKJ,UAAL,GAAkB,CAAlB;AACA,iBAAK1F,cAAL,GAAsB,EAAtB;AACA,iBAAK6F,cAAL,CAAoBC,aAApB;AACD;;;iBAEM,0BAAuC;AAAA;;AAAA,gBAAxBC,SAAwB,uEAAJ,EAAI;AAC5C,iBAAKnG,cAAL,CAAoBiG,cAApB,CAAmC,KAAKH,UAAxC,EAAoDK,SAApD,EACCd,IADD,CAEE,2DAAI,UAACpE,CAAD,EAAeqE,CAAf;AAAA,qBAAqBrE,CAAC,CAACsE,GAAF,CAAM,UAAC/C,OAAD;AAAA,uBAAsB,MAAI,CAACwC,sBAAL,CAA4BQ,YAA5B,CAAyChD,OAAzC,CAAtB;AAAA,eAAN,CAArB;AAAA,aAAJ,CAFF,EAICf,SAJD,CAKE,UAACC,IAAD,EAAqB;AACnBL,qBAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,kBAAGA,IAAI,CAACsE,MAAL,IAAe,EAAlB,EAAsB;AACpB,sBAAI,CAACD,cAAL,GAAsB,IAAtB;AACD,eAFD,MAEO;AACL,sBAAI,CAACA,cAAL,GAAsB,KAAtB;AACD;;AACDrE,kBAAI,CAACV,OAAL,CAAa,UAAAoF,CAAC;AAAA,uBAAI,MAAI,CAAChG,cAAL,CAAoBc,IAApB,CAAyBkF,CAAzB,CAAJ;AAAA,eAAd;AACD,aAbH,EAaK,UAACtD,KAAD,EAA8B;AAC/BzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aAfH;AAiBD;;;iBAEM,2BAAkB;AACvB,iBAAKgD,UAAL,GAAkB,KAAKA,UAAL,GAAkB,CAApC;AACA,iBAAKG,cAAL;AACD;;;iBAED,4BAAmB9E,SAAnB,EAA8B;AAC5B,iBAAKlB,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,qBAAD,EAAwB;AAACX,uBAAS,EAAEA;AAAZ,aAAxB,CAArB;AACD;;;;;;;yBAlEUwE,a,EAAa,yI,EAAA,iJ,EAAA,uH;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,67C;AAAA;AAAA;;;ACV1B;;AACG;;AACE;;AACF;;AACA;;AACE;;AAGF;;AACA;;AAAiC;AAAA,qBAAS,IAAAU,SAAA,EAAT;AAAoB,aAApB;;AAC/B;;AACA;;AAAsB;;AAAQ;;AAChC;;AACA;;AAAiC;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAC/B;;AACA;;AAAsB;;AAAI;;AAC5B;;AACF;;AAQD;;AAEG;;AACG;;AAAW;;AAAkB;;AAC7B;;AAA+B;AAAA;;AAAA;;AAAA,qBAAS,IAAAC,eAAA,WAAT;AAA6C,aAA7C;;AAA/B;;AAEA;;AAAU;;AAAkB;;AAC/B;;AAEA;;AACG;;AAwBH;;AAEA;;AAIA;;AAGH;;;;AAlE2B;;AAAA;;AAGuB;;AAAA;;AA8Bf;;AAAA;;AA0B8B;;AAAA;;;;;;;;;;;;;;;;;;;;;AChEjE;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACbA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaC,qB;AACX,uCAAoB1G,cAApB,EACUgF,sBADV,EAC0D;AAAA;;AADtC,eAAAhF,cAAA,GAAAA,cAAA;AACV,eAAAgF,sBAAA,GAAAA,sBAAA;AAAkD;;;;iBAE5D,iBACEC,KADF,EAEEC,KAFF,EAE4B;AAAA;;AAE1B,gBAAMC,EAAE,GAAGF,KAAK,CAACnE,QAAN,CAAeC,GAAf,CAAmB,WAAnB,CAAX;;AAEA,gBAAIoE,EAAJ,EAAQ;AACN;AACC,qBAAO,KAAKnF,cAAL,CAAoB2G,qBAApB,CAA0CxB,EAA1C,EACCE,IADD,CAEE,2DAAI,UAAAe,CAAC;AAAA,uBAAI,OAAI,CAACpB,sBAAL,CAA4BQ,YAA5B,CAAyCY,CAAzC,CAAJ;AAAA,eAAL,CAFF,CAAP;AAIF,aAND,MAMO;AACL;AACA,qBAAO,gDAAG,KAAKhB,iBAAL,EAAH,CAAP;AACD;AACF;;;iBAED,6BAAoB;AAClB,mBAAO;AACLjE,uBAAS,EAAC,IADL;AAELyF,yBAAW,EAAE,EAFR;AAGLC,gCAAkB,EAAE,EAHf;AAIL1E,oCAAsB,EAAE,CAJnB;AAKL2E,gCAAkB,EAAE,CALf;AAMLC,2BAAa,EAAE;AANV,aAAP;AAQD;;;;;;;yBA/BUL,qB,EAAqB,gI,EAAA,wI;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFpB;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBM;;AAAuC;;AAAG;;;;;;AAC1C;;AAAwC;;AAAsB;;;;;;AAAtB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAa;;;;;;AACpD;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAoB;;;;;;AAC3D;;AAAwC;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAKxC;;AAAuC;;AAAyB;;;;;;AAChE;;AAAwC;;AAAmC;;;;;;AAAnC;;AAAA;;;;;;AAItC;;AAAuC;;AAAqB;;;;;;AAC5D;;AAAwC;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAI1C;;AAAuC;;AAAQ;;;;;;;;AAC/C;;AACE;;AAAwC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAW;;AAAO;;AACpB;;AACA;;AAAwC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtC;;AAAW;;AAAK;;AAClB;;AACA;;AAAqC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AAAW;;AAAO;;AACpB;;AACF;;;;;;AAGF;;;;;;AACA;;;;;;AAlDJ;;AAGA;;AAGI;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAEA;;AACI;;AACA;;AACJ;;AAEA;;AACE;;AACA;;AAWF;;AAEA;;AACA;;AACF;;AAEF;;;;;;AAlDiB;;AAAA;;AA8CO;;AAAA;;AACa;;AAAA;;;;;;;;AAKrC;;AACE;;AAAwD;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAS;;AAC/F;;;;UDvDaM,2B;AAQX,6CAAoBhH,cAApB,EACSiH,YADT,EAEUjC,sBAFV,EAGU/E,MAHV,EAG0B;AAAA;;AAHN,eAAAD,cAAA,GAAAA,cAAA;AACX,eAAAiH,YAAA,GAAAA,YAAA;AACC,eAAAjC,sBAAA,GAAAA,sBAAA;AACA,eAAA/E,MAAA,GAAAA,MAAA;AATV,eAAAiH,yBAAA,GAA4B,KAA5B;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAArB,UAAA,GAAqB,CAArB;AACA,eAAA1F,cAAA,GAA4B,EAA5B;AACA,eAAAgH,gBAAA,GAA6B,CAAC,IAAD,EAAO,cAAP,EAAuB,aAAvB,EAAsC,0BAAtC,EAAkE,sBAAlE,EAA0F,SAA1F,CAA7B;AAK6B;;;;iBAE7B,oBAAQ;AACN,iBAAKnB,cAAL;AACD;;;iBAED,yBAAgBC,aAAhB,EAA+B;AAC7B7E,mBAAO,CAACC,GAAR,CAAY4E,aAAZ;AACA,iBAAKJ,UAAL,GAAkB,CAAlB;AACA,iBAAK1F,cAAL,GAAsB,EAAtB;AACA,iBAAK6F,cAAL,CAAoBC,aAApB;AACD;;;iBAEM,0BAA2C;AAAA;;AAAA,gBAA5BmB,aAA4B,uEAAJ,EAAI;AAChD,iBAAKF,SAAL,GAAiB,KAAjB;AACA,iBAAKnH,cAAL,CAAoBiG,cAApB,CAAmC,KAAKH,UAAxC,EAAoDuB,aAApD,EACChC,IADD,CAEE,2DAAI,UAACpE,CAAD,EAAeqE,CAAf;AAAA,qBAAqBrE,CAAC,CAACsE,GAAF,CAAM,UAAC/C,OAAD;AAAA,uBAAsB,OAAI,CAACwC,sBAAL,CAA4BQ,YAA5B,CAAyChD,OAAzC,CAAtB;AAAA,eAAN,CAArB;AAAA,aAAJ,CAFF,EAICf,SAJD,CAKE,UAACC,IAAD,EAAqB;AACnB;AACAA,kBAAI,CAACV,OAAL,CAAa,UAAAwB,OAAO;AAAA,uBAAI,OAAI,CAACpC,cAAL,CAAoBc,IAApB,CAAyBsB,OAAzB,CAAJ;AAAA,eAApB;AACAnB,qBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,OAAI,CAAClB,cAAxB;AACA,qBAAI,CAAC+G,SAAL,GAAiB,IAAjB;;AAEA,kBAAGzF,IAAI,CAACsE,MAAL,IAAe,EAAlB,EAAsB;AACpB,uBAAI,CAACkB,yBAAL,GAAiC,IAAjC;AACD,eAFD,MAEO;AACL,uBAAI,CAACA,yBAAL,GAAiC,KAAjC;AACD,eAVkB,CAYnB;;AACD,aAlBH,EAkBK,UAACpE,KAAD,EAA8B;AAC/BzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aApBH;AAsBD;;;iBAED,2BAAkB;AAChB,iBAAKgD,UAAL,GAAkB,KAAKA,UAAL,GAAkB,CAApC;AACA,iBAAKG,cAAL;AACD;;;iBAED,uBAAc9E,SAAd,EAAyB;AAAA;;AACvB,iBAAKnB,cAAL,CAAoBsH,aAApB,CAAkCnG,SAAlC,EAA6CM,SAA7C,CACE,UAACC,IAAD,EAAU;AACR,qBAAI,CAACuE,cAAL;AACD,aAHH,EAIE,UAACnD,KAAD,EAA6B;AAC3BzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aANH;AAQD;;;iBAED,oBAAWN,OAAX,EAA6B;AAC3BnB,mBAAO,CAACC,GAAR,CAAYkB,OAAZ;AACA,iBAAKyE,YAAL,CAAkB7C,IAAlB,CAAuB,iIAAvB,EAAyD;AACvDvD,kBAAI,EAAE;AACJ+E,sBAAM,EAAEpD,OAAO,CAACuE;AADZ,eADiD;AAIvDQ,oBAAM,EAAE,OAJ+C;AAKvDC,mBAAK,EAAE;AALgD,aAAzD;AAOD;;;iBAED,4BAAmBrG,SAAnB,EAA8B;AAC5B,iBAAKlB,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,gBAAD,EAAmB;AAACX,uBAAS,EAAEA;AAAZ,aAAnB,CAArB;AACD;;;;;;;yBA/EU6F,2B,EAA2B,yI,EAAA,mI,EAAA,iJ,EAAA,uH;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA,iB;AAAA,e;AAAA,++B;AAAA;AAAA;;;ACfxC;;AAEE;;AACE;;AAAW;;AAAkB;;AAC7B;;AAEO;AAAA;;AAAA;;AAAA,qBAAS,IAAAT,eAAA,WAAT;AAA6C,aAA7C;;AAFP;;AAMA;;AAAU;;AAAkB;;AAChC;;AAEA;;AAuDA;;AAIA;;;;AA3DM;;AAAA;;AAuDwB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBN;;AAEwB;;AAAW;;;;;;AACnC;;AAEwB;;AAAc;;;;;;;;AAgClC;;AACI;;AACI;;AACM;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAC;;AACjC;;AAGJ;;AACJ;;;;;;AAJa;;AAAA;;;;UC5E5BkB,sB;AAYX,wCACUzH,cADV,EAEU0H,SAFV,EAGU3H,cAHV,EAGwC;AAAA;;AAF9B,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAA0H,SAAA,GAAAA,SAAA;AACA,eAAA3H,cAAA,GAAAA,cAAA;AAdV,eAAA4H,YAAA,GAAe,IAAf;AAEA,eAAAnF,OAAA,GAAmB;AACjBrB,qBAAS,EAAE,IADM;AAEjByF,uBAAW,EAAE,EAFI;AAGjBC,8BAAkB,EAAE,EAHH;AAIjB1E,kCAAsB,EAAE,CAJP;AAKjB2E,8BAAkB,EAAE,CALH;AAMjBC,yBAAa,EAAE;AANE,WAAnB;AAaI;;;;iBAEJ,oBAAQ;AACN,iBAAKvE,OAAL,GAAe,KAAKzC,cAAL,CAAoBa,QAApB,CAA6BC,IAA7B,CAAkC,SAAlC,CAAf;;AAEA,gBAAG,KAAK2B,OAAL,IAAgB,KAAKA,OAAL,CAAarB,SAAhC,EAA2C;AACzC,mBAAKwG,YAAL,GAAoB,KAApB;AACD;AACF;;;iBAED,oBAAWC,WAAX,EAAgC;AAAA;;AAC9B,gBAAMC,QAAQ,GAAG,KAAKC,yBAAL,CAA+B,KAAKtF,OAApC,CAAjB;AACA,iBAAKxC,cAAL,CAAoB+H,UAApB,CAA+BF,QAA/B,EAAyCpG,SAAzC,CACE,UAACmB,QAAD,EAAuB;AACrBgF,yBAAW,CAACjG,KAAZ;AACA,qBAAI,CAACa,OAAL,CAAauE,aAAb,GAA6B,EAA7B;AACD,aAJH,EAKE,UAACjE,KAAD,EAA8B;AAC5BzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aAPH;AASD;;;iBAED,mCAA0BN,OAA1B,EAA0C;AACxC,gBAAMwF,eAAe,GAAG,IAAIC,QAAJ,EAAxB;AACAD,2BAAe,CAACE,MAAhB,CACE,SADF,EAEE,IAAIC,IAAJ,CAAS,CAACC,IAAI,CAACC,SAAL,CAAe7F,OAAf,CAAD,CAAT,EAAoC;AAAE8F,kBAAI,EAAE;AAAR,aAApC,CAFF;;AAKA,iBAAK,IAAIhD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK9C,OAAL,CAAauE,aAAb,CAA2Bf,MAA/C,EAAuDV,CAAC,EAAxD,EAA4D;AAC1D0C,6BAAe,CAACE,MAAhB,CACE,WADF,EAEE,KAAK1F,OAAL,CAAauE,aAAb,CAA2BzB,CAA3B,EAA8BiD,IAFhC,EAGE,KAAK/F,OAAL,CAAauE,aAAb,CAA2BzB,CAA3B,EAA8BiD,IAA9B,CAAmCnF,IAHrC;AAKD;;AACD,mBAAO4E,eAAP;AACD;;;iBAED,wBAAeQ,KAAf,EAA2B;AACzB,gBAAIA,KAAK,CAACC,MAAN,CAAaC,KAAjB,EAAwB;AACtB,kBAAMH,IAAI,GAAGC,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,kBAAMC,UAAU,GAAe;AAC7BJ,oBAAI,EAAEA,IADuB;AAE7BK,mBAAG,EAAE,KAAKlB,SAAL,CAAemB,sBAAf,CACHC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BT,IAA3B,CADG;AAFwB,eAA/B;AAMA,mBAAK/F,OAAL,CAAauE,aAAb,CAA2B7F,IAA3B,CAAgCyH,UAAhC;AACD;AACF;;;iBAED,sBAAarD,CAAb,EAAwB;AACtB,iBAAK9C,OAAL,CAAauE,aAAb,CAA2BkC,MAA3B,CAAkC3D,CAAlC,EAAqC,CAArC;AACD;;;iBAED,qBAAYqD,UAAZ,EAAoC;AAClC,iBAAKnG,OAAL,CAAauE,aAAb,CAA2B7F,IAA3B,CAAgCyH,UAAhC;AACD;;;;;;;yBA3EUlB,sB,EAAsB,yI,EAAA,uI,EAAA,+H;AAAA,O;;;cAAtBA,sB;AAAsB,4C;AAAA,iB;AAAA,e;AAAA,kwC;AAAA;AAAA;;;ADdnC;;AACI;;AAEI;;AACI;;AAEI;;AACM;AAAA;;AAAA;;AAAA,qBAAY,IAAAM,UAAA,KAAZ;AAAmC,aAAnC;;AAEF;;AAEI;;AAAW;;AAAY;;AACvB;;AAEO;AAAA;AAAA;;AAFP;;AAIJ;;AAEA;;AAEI;;AAAW;;AAAmB;;AAC9B;;AAEO;AAAA;AAAA;;AAFP;;AAIJ;;AAEA;;AAEI;;AAAW;;AAAoB;;AAC/B;;AAEO;AAAA;AAAA;;AAFP;;AAIJ;;AAEA;;AAEI;;AAAW;;AAAwB;;AACnC;;AAEO;AAAA;AAAA;;AAFP;;AAIJ;;AAEA;;AACI;;AAEmC;;AAAK;;AACxC;;AAGA;;AAGJ;;AAEJ;;AAEJ;;AACA;;AACI;;AACI;;AAEK;AAAA,qBAAS,IAAAmB,WAAA,QAAT;AAA4B,aAA5B;;AACD;;AACI;;AACI;;AACA;;AAAG;AAAA;;AAAA;;AAAA,qBAAS,WAAT;AAA2B,aAA3B;;AACsB;;AAAM;;AAC/B;;AACJ;;AAEJ;;AACJ;;AACA;;AAKO;AAAA,qBAAU,IAAAC,cAAA,QAAV;AAAgC,aAAhC;;AALP;;AAMJ;;AACA;;AACI;;AACI;;AAEI;;AASJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAEJ;;AACJ;;;;AAxF+B;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AASA;;AAAA;;AAQgB;;AAAA;;AAGA;;AAAA;;AAkCa;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE5EtD;;AAAuC;;AAAG;;;;;;AAC1C;;AAAwC;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAa;;;;;;AACpD;;AAAwC;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAwC;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAKxC;;AAAuC;;AAAQ;;;;;;AAC/C;;AAAwC;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAKtC;;AAAuC;;AAAY;;;;;;AACnD;;AAAwC;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAK1C;;AAAuC;;AAAO;;;;;;;;AAE1C;;AAAkF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AAAiB;;;;;;AADlJ;;AACI;;AACJ;;;;;;AADa;;AAAA;;;;;;AAIf;;;;;;AACA;;;;UC7CSC,qB;AAOX,uCAAoBpJ,cAApB,EAAoD;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA;AALpB,eAAAoH,gBAAA,GAA6B,CAAC,IAAD,EAAO,cAAP,EAAuB,MAAvB,EAA+B,SAA/B,EAA0C,aAA1C,EAAyD,QAAzD,EAAmE,QAAnE,CAA7B;AACA,eAAAiC,UAAA,GAAa,EAAb;AAEA,eAAAC,MAAA,GAAiB,KAAjB;AAEuD;;;;iBAEvD,oBAAQ;AACN,iBAAKC,0BAAL,CAAgC,KAAKD,MAArC;AACD;;;iBAED,oCAA2BE,eAA3B,EAAoD;AAAA;;AAClD,iBAAKxJ,cAAL,CAAoBuJ,0BAApB,CAA+CC,eAA/C,EAAgE/H,SAAhE,CACE,UAACC,IAAD,EAAU;AACR,qBAAI,CAAC2H,UAAL,GAAkB3H,IAAlB;AACAL,qBAAO,CAACC,GAAR,CAAYI,IAAZ;AACD,aAJH,EAIK,UAACoB,KAAD,EAAW;AACZzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aANH;AAQD;;;iBAED,yBAAgBG,OAAhB,EAAyB;AAAA;;AACvB5B,mBAAO,CAACC,GAAR,CAAY2B,OAAZ;AACA,iBAAKjD,cAAL,CAAoByJ,eAApB,CAAoCxG,OAApC,EAA6CxB,SAA7C,CACE,UAACmB,QAAD,EAAc;AACZ,qBAAI,CAAC2G,0BAAL,CAAgC,OAAI,CAACD,MAArC;;AACAjI,qBAAO,CAACC,GAAR,CAAYsB,QAAZ;AACD,aAJH,EAIK,UAACE,KAAD,EAAW;AACZzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aANH;AAQD;;;;;;;yBAlCUsG,qB,EAAqB,yI;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA,iB;AAAA,e;AAAA,m0B;AAAA;AAAA;ADRlC;;AACE;;AACE;;AAA+B;AAAA,qBAAS,IAAAG,0BAAA,CAA2B,KAA3B,CAAT;AAA0C,aAA1C;;AAA4C;;AAAG;;AAC9E;;AAAkC;AAAA,qBAAS,IAAAA,0BAAA,CAA2B,QAA3B,CAAT;AAA6C,aAA7C;;AAA+C;;AAAM;;AACvF;;AAAqC;AAAA,qBAAS,IAAAA,0BAAA,CAA2B,WAA3B,CAAT;AAAgD,aAAhD;;AAAmD;;AAAS;;AACnG;;AAEF;;AAEI;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGC;;AACG;;AACA;;AACF;;AAGD;;AACG;;AACA;;AACF;;AAGD;;AACC;;AACA;;AAGF;;AAEA;;AACA;;AACF;;AACF;;;;AAhDiB;;AAAA;;AA6CO;;AAAA;;AACa;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UE9CxBG,Y,6BALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,gBAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACPzB;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCMaE,c;AAEX,kCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,c;AAAc,O;;;cAAdA,c;AAAc,kC;AAAA,gB;AAAA,e;AAAA,8G;AAAA;AAAA;ACP3B;;AACI;;AACI;;AAAI;;AAAa;;AACrB;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWaC,S;AACX,2BACUC,eADV,EAEU7J,MAFV,EAGUsE,WAHV,EAGkC;AAAA;;AAFxB,eAAAuF,eAAA,GAAAA,eAAA;AACA,eAAA7J,MAAA,GAAAA,MAAA;AACA,eAAAsE,WAAA,GAAAA,WAAA;AACN;;;;iBAEJ,qBACEU,KADF,EAEEC,KAFF,EAE4B;AAM1B,gBAAI,KAAK4E,eAAL,CAAqBC,QAArB,OAAoC,IAAxC,EAA8C;AAC5C,kBAAMC,IAAI,GAAG/E,KAAK,CAACpE,IAAN,CAAW,OAAX,CAAb;;AAEA,kBAAImJ,IAAJ,EAAU;AACR,oBAAMC,KAAK,GAAG,KAAK1F,WAAL,CAAiB2F,SAAjB,CAA2BF,IAA3B,CAAd;;AAEA,oBAAIC,KAAJ,EAAW;AACT,yBAAO,IAAP;AACD,iBAFD,MAEO;AACL,uBAAKhK,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACA,yBAAO,KAAP;AACD;AACF;AACF;;AAED,iBAAK7B,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,KAAP;AACD;;;;;;;yBAhCU+H,S,EAAS,mI,EAAA,8G,EAAA,0H;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;;;;;;;;;;;;;ACbd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaM,W;AAIX,6BACUC,UADV,EAEUN,eAFV,EAE0C;AAAA;;AADhC,eAAAM,UAAA,GAAAA,UAAA;AACA,eAAAN,eAAA,GAAAA,eAAA;AALV,eAAAO,WAAA,GAAc,uBAAd;AAEA,eAAAC,aAAA,GAAgB,IAAI,gEAAJ,CAAgB;AAAE,uBAAW;AAAb,WAAhB,CAAhB;AAII;;;;iBAEG,kBAASC,YAAT,EAAuB;AAC5B,mBAAO,KAAKH,UAAL,CAAgBI,IAAhB,CAAqB,KAAKH,WAAL,GAAmB,kBAAxC,EAA4DE,YAA5D,CAAP;AACD;;;iBAEM,eAAME,SAAN,EAAiB;AACtB,mBAAO,KAAKL,UAAL,CAAgBI,IAAhB,CAAqB,KAAKH,WAAL,GAAmB,eAAxC,EAAyDI,SAAzD,EAAoE;AACzEC,qBAAO,EAAE,KAAKJ;AAD2D,aAApE,CAAP;AAGD;;;iBAEM,mBAAU;AACf,mBAAO,KAAKF,UAAL,CAAgBrJ,GAAhB,CAAoB,KAAKsJ,WAAL,GAAmB,UAAvC,EAAmD;AACxDM,0BAAY,EAAE;AAD0C,aAAnD,CAAP;AAGD;;;iBAGM,oBAAW;AAChB,mBAAO,KAAKP,UAAL,CAAgBrJ,GAAhB,CAAoB,KAAKsJ,WAAL,GAAmB,WAAvC,EAAoD;AACzDM,0BAAY,EAAE;AAD2C,aAApD,CAAP;AAGD;;;iBAEM,mBAAUC,YAAV,EAAsB;AAC3B,gBAAIC,OAAO,GAAG,KAAd;AACA,gBAAMC,SAAS,GAAQ,KAAKhB,eAAL,CAAqBiB,QAArB,EAAvB;;AAEA,gBAAID,SAAS,IAAI,IAAb,IAAqBA,SAAzB,EAAoC;AAClC,mBAAK,IAAIxF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwF,SAAS,CAAC9E,MAA9B,EAAsCV,CAAC,EAAvC,EAA2C;AACzC,qBAAK,IAAI0F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,YAAY,CAAC5E,MAAjC,EAAyCgF,CAAC,EAA1C,EAA8C;AAC5C,sBAAIF,SAAS,CAACxF,CAAD,CAAT,CAAa2F,QAAb,KAA0BL,YAAY,CAACI,CAAD,CAA1C,EAA+C;AAC7CH,2BAAO,GAAG,IAAV;AACA,2BAAOA,OAAP;AACD,mBAHD,MAGO;AACL,2BAAOA,OAAP;AACD;AACF;AACF;AACF;AACF;;;;;;;yBAhDUV,W,EAAW,uH,EAAA,0H;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;ACLdwFae,S;;;;;yBAAAA,S;AAAS,O;;;cAATA,S;AAAS,oBAFR,2DAEQ;;;mBAXT,CACT,2DADS,EAET;AACEC,iBAAO,EAAE,uEADX;AAEEC,kBAAQ,EAAC,uEAFX;AAGEC,eAAK,EAAC;AAHR,SAFS,EAOT,mEAPS,C;AAQV,kBAzBQ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,sEAJO,EAKP,6DALO,EAMP,6FANO,EAOP,2EAPO,EAQP,yEARO,EASP,gFATO,EAUP,uEAVO,EAWP,8EAXO,EAYP,uEAZO,EAaP,qEAbO,EAcP,yEAdO,EAeP,sFAfO,CAyBR;;;;6HAGUH,S,EAAS;AAAA,yBA/ClB,2DA+CkB,EA9ClB,kEA8CkB,EA7ClB,qEA6CkB,EA5ClB,kEA4CkB,EA3ClB,qEA2CkB,EA1ClB,wEA0CkB,EAzClB,iFAyCkB,EAxClB,kGAwCkB,EAvClB,8DAuCkB,EAtClB,iHAsCkB,EArClB,kIAqCkB,EApClB,iHAoCkB,EAnClB,uFAmCkB,EAlClB,4GAkCkB,EAjClB,+EAiCkB,EAhClB,mEAgCkB,EA/BlB,iFA+BkB,EA9BlB,6FA8BkB;AA9BG,oBAGrB,uEAHqB,EAIrB,oEAJqB,EAKrB,0DALqB,EAMrB,sEANqB,EAOrB,6DAPqB,EAQrB,6FARqB,EASrB,2EATqB,EAUrB,yEAVqB,EAWrB,gFAXqB,EAYrB,uEAZqB,EAarB,8EAbqB,EAcrB,uEAdqB,EAerB,qEAfqB,EAgBrB,yEAhBqB,EAiBrB,sFAjBqB;AA8BH,S;AAbG,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEb;;AACuB;;AAAK;;;;;;AAC5B;;AAC+B;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAI/B;;AACuB;;AAAY;;;;;;AACnC;;AAC+B;;AAAuC;;;;;;AAAvC;;AAAA;;;;;;AAI/B;;AACuB;;AAAM;;;;;;AAC7B;;AAC+B;;AAAuC;;;;;;AAAvC;;AAAA;;;;;;AAI/B;;AACuB;;AAAiB;;;;;;AACxC;;AAC+B;;AAA2C;;;;;;AAA3C;;AAAA;;;;;;AAI/B;;AACuB;;AAAO;;;;;;;;AAC9B;;AAEI;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAM;;AAClF;;;;;;AAGJ;;;;;;AAEA;;;;UCtCKI,a;AAMX,+BAAoBtL,cAApB,EACUC,MADV,EAC0B;AAAA;;AADN,eAAAD,cAAA,GAAAA,cAAA;AACV,eAAAC,MAAA,GAAAA,MAAA;AALV,eAAAmH,gBAAA,GAA6B,CAAC,MAAD,EAAS,aAAT,EAAwB,OAAxB,EAAiC,kBAAjC,EAAqD,QAArD,CAA7B;AAEA,eAAAmE,WAAA,GAAqB,EAArB;AAG6B;;;;iBAE7B,oBAAQ;AACN,iBAAKC,cAAL;AACD;;;iBAED,iBAAOC,MAAP,EAAe;AAAA;;AACbpK,mBAAO,CAACC,GAAR,CAAYmK,MAAZ;AACA,iBAAKzL,cAAL,CAAoB0L,cAApB,CAAmCD,MAAnC,EAA2ChK,SAA3C,CACE,UAACC,IAAD,EAAU;AACRL,qBAAO,CAACC,GAAR,CAAYI,IAAZ;;AACA,qBAAI,CAAC8J,cAAL;AACD,aAJH,EAIK,UAACzJ,GAAD,EAAS;AACVV,qBAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,aANH;AAQD;;;iBAED,0BAAiB;AAAA;;AACf,iBAAK/B,cAAL,CAAoBwL,cAApB,GAAqC/J,SAArC,CACE,UAACmB,QAAD,EAAoB;AAClBvB,qBAAO,CAACC,GAAR,CAAYsB,QAAZ;AACA,qBAAI,CAAC2I,WAAL,GAAmB3I,QAAnB;AACD,aAJH,EAKE,UAACE,KAAD,EAAW;AACTzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aAPH;AASD;;;iBAED,oBAAW;AAET,iBAAK7C,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,aAAD,EAAgB;AACnC3B,qCAAuB,EAAE,KADU;AACHgF,gBAAE,EAAE;AADD,aAAhB,CAArB,EAFS,CAMT;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;;;;;yBAlDUmG,a,EAAa,yI,EAAA,uH;AAAA,O;;;cAAbA,a;AAAa,iC;AAAA,iB;AAAA,e;AAAA,ypB;AAAA;AAAA;ADT1B;;AACI;;AACI;;AAAQ;AAAA,qBAAS,IAAAK,QAAA,EAAT;AAAmB,aAAnB;;AAAuD;;AAAQ;;AAC3E;;AACA;;AAII;;AACI;;AAEA;;AAEJ;;AAEA;;AACI;;AAEA;;AAEJ;;AAEA;;AACI;;AAEA;;AAEJ;;AAEA;;AACI;;AAEA;;AAEJ;;AAEA;;AACI;;AAEA;;AAIJ;;AAEA;;AAEA;;AAEJ;;AACJ;;;;AA7CW;;AAAA;;AAyCE;;AAAA;;AAEoB;;AAAA;;;;;;;;;;;;;;;;;;;;;AE9CjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,a;AAKX,+BAAoBlE,SAApB,EAA6C;AAAA;;AAAzB,eAAAA,SAAA,GAAAA,SAAA;AAJV,eAAAgB,KAAA,GAAkC,IAAI,0DAAJ,EAAlC;AAE+B,eAAAmD,UAAA,GAAa,MAAb;AAEM;;;;iBAGxC,oBAAWC,GAAX,EAA2B;AAChCA,eAAG,CAACC,cAAJ;AACAD,eAAG,CAACE,eAAJ;AACA,iBAAKH,UAAL,GAAkB,MAAlB;AACD;;;iBAGM,qBAAYC,GAAZ,EAA4B;AACjCA,eAAG,CAACC,cAAJ;AACAD,eAAG,CAACE,eAAJ;AACA,iBAAKH,UAAL,GAAkB,MAAlB;AACD;;;iBAGM,gBAAOC,GAAP,EAAuB;AAC5BA,eAAG,CAACC,cAAJ;AACAD,eAAG,CAACE,eAAJ;AACA,iBAAKH,UAAL,GAAkB,MAAlB;AAEA,gBAAIlD,UAAU,GAAe,IAA7B;AAEA,gBAAMJ,IAAI,GAAGuD,GAAG,CAACG,YAAJ,CAAiBvD,KAAjB,CAAuB,CAAvB,CAAb;AACA,gBAAME,GAAG,GAAG,KAAKlB,SAAL,CAAemB,sBAAf,CACVC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BT,IAA3B,CADU,CAAZ;AAIAI,sBAAU,GAAG;AAAEJ,kBAAI,EAAJA,IAAF;AAAQK,iBAAG,EAAHA;AAAR,aAAb;AACA,iBAAKF,KAAL,CAAWwD,IAAX,CAAgBvD,UAAhB;AACD;;;;;;;yBApCUiD,a,EAAa,uI;AAAA,O;;;cAAbA,a;AAAa,wC;AAAA,mB;AAAA;AAAA;;qBAAb,sB;AACX,a,EAAA,W,EAAA;AAAA,qBADW,uBACX;AAAC,a,EAAA,M,EAAA;AAAA,qBADU,kBACV;AADwB,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFzB;;AACE;;AACF;;;;;;;;AACA;;AAA6B;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;;;;;AAKA;;AAAgF;;AAAI;;;;;;AACpF;;AAAoF;;AAAS;;;;;;AAC7F;;AAAwF;;AAAe;;;;;;AACvG;;AAA6F;;AAAoB;;;;;;AACjH;;AAA2F;;AAAiB;;;;;;AAN9G;;AACE;;AAAyD;;AAAI;;AAC7D;;AACA;;AACA;;AACA;;AACA;;AACF;;;;;;AALW;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UCVEO,e;AACX,iCACUrC,eADV,EAEU7J,MAFV,EAGSsE,WAHT,EAGiC;AAAA;;AAFvB,eAAAuF,eAAA,GAAAA,eAAA;AACA,eAAA7J,MAAA,GAAAA,MAAA;AACD,eAAAsE,WAAA,GAAAA,WAAA;AACL;;;;iBAEJ,oBAAQ,CAAW;;;iBAEZ,sBAAa;AAClB,mBAAO,KAAKuF,eAAL,CAAqBsC,UAArB,EAAP;AACD;;;iBAEM,kBAAS;AACd,iBAAKtC,eAAL,CAAqBuC,KAArB;AACA,iBAAKpM,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;;;iBAEM,mBAAU;AACf,mBAAO,KAAKgI,eAAL,CAAqBwC,OAArB,EAAP;AACD;;;iBAEM,kBAAS;AACd,mBAAO,KAAKxC,eAAL,CAAqByC,MAArB,EAAP;AACD;;;;;;;yBAxBUJ,e,EAAe,4I,EAAA,uH,EAAA,mI;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA,ovC;AAAA;AAAA;ADV5B;;AACE;;AACE;;AACF;;AAEA;;AACA;;AAGA;;AAGF;;AAEA;;;;AARW;;AAAA;;AAGA;;AAAA;;AAKmB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UETjBK,e;AACX,mCAAc;AAAA;AAAE;;;;iBAET,kBAASC,KAAT,EAAoB;AACzBC,wBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BvE,IAAI,CAACC,SAAL,CAAeoE,KAAf,CAA9B;AACD;;;iBAEM,oBAAQ;AACb,mBAAOrE,IAAI,CAACwE,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAX,CAAP;AACD;;;iBAEM,kBAASC,QAAT,EAA2B;AAChCJ,wBAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCG,QAAjC;AACD;;;iBAEM,oBAAQ;AACb,mBAAOJ,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAP;AACD;;;iBAEM,iBAAQ;AACbH,wBAAY,CAACL,KAAb;AACD;;;iBAEM,sBAAa;AAClB,mBAAO,KAAKtB,QAAL,MAAmB,KAAKhB,QAAL,EAA1B;AACD;;;iBAEM,mBAAU;AACf,gBAAM0C,KAAK,GAAU,KAAK1B,QAAL,EAArB;AACA,mBAAO0B,KAAK,CAAC,CAAD,CAAL,CAASxB,QAAT,KAAsB,OAA7B;AACD;;;iBAEM,kBAAS;AACd,gBAAMwB,KAAK,GAAU,KAAK1B,QAAL,EAArB;AACA,mBAAO0B,KAAK,CAAC,CAAD,CAAL,CAASxB,QAAT,KAAsB,MAA7B;AACD;;;;;;;yBAnCUuB,e;AAAe,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIDO,0B;AAEX,8CAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,0B;AAA0B,O;;;cAA1BA,0B;AAA0B,+C;AAAA,gB;AAAA,e;AAAA,6E;AAAA;AAAA;ACPvC;;AACI;;AACG;;AAAI;;AAAwF;;AAC/F;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOoB;;AAA0E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACJ;;;;;;AADS;;AAAA;;;;UCFhBC,2B;AAMX,6CAAoBjN,cAApB,EACUE,MADV,EAEUD,cAFV,EAE0C;AAAA;;AAFtB,eAAAD,cAAA,GAAAA,cAAA;AACV,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAD,cAAA,GAAAA,cAAA;AANV,eAAAiN,oBAAA,GAAuB,CAAvB;AAM6C;;;;iBAE7C,oBAAQ;AACN,iBAAKzK,OAAL,GAAe,KAAKzC,cAAL,CAAoBa,QAApB,CAA6BC,IAA7B,CAAkC,SAAlC,CAAf;AACAQ,mBAAO,CAACC,GAAR,CAAY,KAAKkB,OAAjB;AACD;;;iBAED,mBAAUrB,SAAV,EAAqB;AACnB,iBAAKnB,cAAL,CAAoBkN,SAApB,CAA8B/L,SAA9B,EAAyCM,SAAzC,CACE,UAACmB,QAAD,EAAc;AACZvB,qBAAO,CAACC,GAAR,CAAYsB,QAAZ;AACD,aAHH,EAGK,UAACE,KAAD,EAAU;AACXzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aALH;AAOD;;;iBAED,qBAAYqK,KAAZ,EAAmB;AACjB,iBAAKF,oBAAL,GAA4BE,KAA5B;AACD;;;iBAED,oBAAWhM,SAAX,EAAsB;AACpB,iBAAKlB,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,aAAD,EAAgB;AACnC3B,qCAAuB,EAAE,IADU;AACJgF,gBAAE,EAAEhE;AADA,aAAhB,CAArB;AAGD;;;;;;;yBAjCU6L,2B,EAA2B,+H,EAAA,uH,EAAA,yI;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA,iB;AAAA,e;AAAA,+oB;AAAA;AAAA;ADVxC;;AAEI;;AACI;;AAEI;;AACI;;AACJ;;AAEA;;AACI;;AACI;;AAGJ;;AACJ;;AAEJ;;AACA;;AACI;;AACI;;AACI;;AAAI;;AAAuB;;AAC/B;;AACA;;AACI;;AAAa;;AACb;;AACJ;;AACA;;AACI;;AAAG;;AAAsC;;AAAI;;AAAY;;AAA0C;;AAA8B;;AACrI;;AACA;;AACI;;AAA6D;AAAA,qBAAS,IAAAI,UAAA,uBAAT;AAAsC,aAAtC;;AAAyC;;AAAO;;AAC7G;;AACA;;AAAgD;AAAA,qBAAS,IAAAF,SAAA,uBAAT;AAAqC,aAArC;;AAAuC;;AAAW;;AACtG;;AACJ;;AACJ;;AACJ;;AACJ;;;;AAhCqB;;AAAA;;AAK+B;;AAAA;;AAU5B;;AAAA;;AAIJ;;AAAA;;AAGG;;AAAA;;AAAgG;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UErB1GG,kB;AAEX,sCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,kB;AAAkB,O;;;cAAlBA,kB;AAAkB,sC;AAAA,gB;AAAA,e;AAAA,4F;AAAA;AAAA;ACP/B;;AACI;;AACI;;AAAI;;AAAuC;;AAC/C;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEY;;AACuB;;AAAK;;;;;;AAC5B;;AAC+B;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAI/B;;AACuB;;AAAQ;;;;;;AAC/B;;AAC+B;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAI/B;;AACuB;;AAAY;;;;;;AACnC;;AAC+B;;AAA+B;;;;;;AAA/B;;AAAA;;;;;;AAI/B;;AACuB;;AAAO;;;;;;AAC9B;;AAC+B;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAI/B;;AACuB;;AAAO;;;;;;AAC9B;;AAC+B;;AAAwB;;;;;;AAAxB;;AAAA;;;;;;AAInC;;;;;;AAEA;;;;UClCKC,iB;AAMX,mCAAoBtN,cAApB,EAAoD;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA;AAJpB,eAAAoH,gBAAA,GAAmB,CAAC,MAAD,EAAS,SAAT,EAAoB,aAApB,EAAmC,QAAnC,EAA6C,QAA7C,CAAnB;AAEA,eAAAmG,cAAA,GAAmC,EAAnC;AAEuD;;;;iBAEvD,oBAAQ;AACN,iBAAKC,eAAL;AACD;;;iBAED,2BAAkB;AAAA;;AAChB,iBAAKxN,cAAL,CAAoByN,WAApB,GAAkChM,SAAlC,CACE,UAACC,IAAD,EAA4B;AAC1BL,qBAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,qBAAI,CAAC6L,cAAL,GAAsB7L,IAAtB;AACD,aAJH,EAIK,UAACK,GAAD,EAAQ;AACTV,qBAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,aANH;AAQD;;;;;;;yBArBUuL,iB,EAAiB,yI;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,iB;AAAA,e;AAAA,+f;AAAA;AAAA;ADT9B;;AACI;;AAII;;AACI;;AAEA;;AAEJ;;AAEA;;AACI;;AAEA;;AAEJ;;AAEA;;AACI;;AAEA;;AAEJ;;AAEA;;AACI;;AAEA;;AAEJ;;AAEA;;AACI;;AAEA;;AAEJ;;AAGA;;AAEA;;AAEJ;;AACJ;;;;AA5CW;;AAAA;;AAwCE;;AAAA;;AAEoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UElCpBI,c;AAEX,gCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,eAAAA,UAAA,GAAAA,UAAA;AAA2B;;;;iBAExC,2BAAkBlL,MAAlB,EAA0B;AAC/B,mBAAO,KAAKkL,UAAL,CAAgB5M,GAAhB,CAAoB,6CAA2C0B,MAA/D,CAAP;AACD;;;iBAEM,yBAAgBQ,OAAhB,EAAyB;AAC5B,mBAAO,KAAK0K,UAAL,CAAgB5M,GAAhB,CAAoB,gDAA8CkC,OAAlE,CAAP;AACH;;;iBAEM,oCAA2BqG,MAA3B,EAAyC;AAC9C,mBAAO,KAAKqE,UAAL,CAAgB5M,GAAhB,CAAsC,8CAA4CuI,MAAlF,CAAP;AACD;;;iBAEM,uBAAW;AAChB,mBAAO,KAAKqE,UAAL,CAAgB5M,GAAhB,CAAsC,uCAAtC,CAAP;AACD;;;iBAEM,wBAAe0K,MAAf,EAAuB;AAC5B,mBAAO,KAAKkC,UAAL,WAAuB,0CAAwClC,MAA/D,CAAP;AACD;;;iBAEM,oBAAWjJ,OAAX,EAA8B;AACnC,mBAAO,KAAKmL,UAAL,CAAgBnD,IAAhB,CAA8B,qCAA9B,EAAqEhI,OAArE,CAAP;AACD;;;iBAEM,wBAAesD,UAAf,EAAuD;AAAA,gBAA5BuB,aAA4B,uEAAJ,EAAI;AAC5D,mBAAO,KAAKsG,UAAL,CAAgB5M,GAAhB,CAA+B,qDAAmD+E,UAAnD,GAA8D,aAA9D,GAA4EuB,aAA3G,CAAP;AACD;;;iBAEM,+BAAsBlG,SAAtB,EAAiC;AACtC,mBAAO,KAAKwM,UAAL,CAAgB5M,GAAhB,CAA6B,iDAA+CI,SAA5E,CAAP;AACD;;;iBAEM,uBAAcA,SAAd,EAAiC;AACtC,mBAAO,KAAKwM,UAAL,WAAuB,gDAA8CxM,SAArE,CAAP;AACD;;;iBAEM,2BAAkBhB,uBAAlB,EAA2CgB,SAA3C,EAAsD;AAC3D,mBAAO,KAAKwM,UAAL,CAAgB5M,GAAhB,CAA+B,6CAA2CZ,uBAA3C,GAAmE,GAAnE,GAAuEgB,SAAtG,CAAP;AACD;;;iBAEM,oBAAWd,YAAX,EAAuCuN,cAAvC,EAAuD;AAC5D,mBAAO,KAAKD,UAAL,CAAgBnD,IAAhB,CAAqB,sCAAoCoD,cAAzD,EAAyEvN,YAAzE,CAAP;AACD;;;iBAEM,mBAAUc,SAAV,EAAqB;AAC1B,mBAAO,KAAKwM,UAAL,CAAgB5M,GAAhB,CAAoB,qCAAmCI,SAAvD,CAAP;AACD;;;iBAEM,0BAAiB;AACtB,mBAAO,KAAKwM,UAAL,CAAgB5M,GAAhB,CAAoB,sCAApB,CAAP;AACD;;;;;;;yBAtDU2M,c,EAAc,uH;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;;;;;;;;;;;;;ACPd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAmBA,UAAMG,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,iBAAS,EAAE;AAAvB,OADqB,EAErB;AACED,YAAI,EAAE,OADR;AAEEC,iBAAS,EAAE,qEAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,OAAD;AAAT;AAJR,OAFqB,EAQrB;AACEqB,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE,mEAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,MAAD;AAAT;AAJR,OARqB,EAcrB;AAAEqB,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE;AAA5B,OAdqB,EAerB;AAAED,YAAI,EAAE,WAAR;AAAqBC,iBAAS,EAAE;AAAhC,OAfqB,EAgBrB;AACED,YAAI,EAAE,eADR;AAEEC,iBAAS,EAAE,iGAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,OAAD;AAAT,SAJR;AAKEwB,eAAO,EAAE;AACPzL,iBAAO,EAAE;AADF;AALX,OAhBqB,EAyBrB;AACEsL,YAAI,EAAE,oBADR;AAEEC,iBAAS,EAAE,iHAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,OAAD;AAAT;AAJR,OAzBqB,EA+BrB;AACEqB,YAAI,EAAE,kBADR;AAEEC,iBAAS,EAAE,6FAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,OAAD;AAAT;AAJR,OA/BqB,EAqCrB;AACEqB,YAAI,EAAE,oBADR;AAEEC,iBAAS,EAAE,iHAFb;AAGEE,eAAO,EAAE;AAAEzL,iBAAO,EAAE;AAAX;AAHX,OArCqB,EA0CrB;AACEsL,YAAI,EAAE,YADR;AAEEC,iBAAS,EAAE,sFAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,MAAD;AAAT,SAJR;AAKEwB,eAAO,EAAE;AACP7N,wBAAc,EAAE;AADT;AALX,OA1CqB,EAmDrB;AACE0N,YAAI,EAAE,MADR;AAEEC,iBAAS,EAAE,kEAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,MAAD;AAAT;AAJR,OAnDqB,EAyDrB;AACEqB,YAAI,EAAC,cADP;AAEEC,iBAAS,EAAE,4GAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,MAAD;AAAT;AAJR,OAzDqB,EA+DrB;AACEqB,YAAI,EAAC,UADP;AAEEC,iBAAS,EAAE,gFAFb;AAGEC,mBAAW,EAAE,CAAC,2DAAD,CAHf;AAIEnN,YAAI,EAAE;AAAE4L,eAAK,EAAE,CAAC,MAAD;AAAT;AAJR,OA/DqB,EAqErB;AACEqB,YAAI,EAAE,UADR;AAEEC,iBAAS,EAAE;AAFb,OArEqB,CAAvB;;UA+EaG,gB;;;;;yBAAAA,gB;AAAgB,O;;;cAAhBA;;;kBAHF,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,EAA6B;AAAEO,gCAAsB,EAAE;AAA1B,SAA7B,CAAD,C,EACC,4D;;;;6HAECF,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtFXG,c;AACX,gCACU9J,WADV,EAEUuF,eAFV,EAGU7J,MAHV,EAGwB;AAAA;;AAFd,eAAAsE,WAAA,GAAAA,WAAA;AACA,eAAAuF,eAAA,GAAAA,eAAA;AACA,eAAA7J,MAAA,GAAAA,MAAA;AACN;;;;iBAEJ,oBAAQ,CAAW;;;iBAEnB,eAAMqO,SAAN,EAAyB;AAAA;;AACvB,iBAAK/J,WAAL,CAAiBgK,KAAjB,CAAuBD,SAAS,CAAC7J,KAAjC,EAAwChD,SAAxC,CACE,UAACmB,QAAD,EAAmB;AACjB,qBAAI,CAACkH,eAAL,CAAqB0E,QAArB,CAA8B5L,QAAQ,CAAC6L,IAAT,CAAczE,IAA5C;;AACA,qBAAI,CAACF,eAAL,CAAqB4E,QAArB,CAA8B9L,QAAQ,CAACkK,QAAvC;;AAEA,kBAAM9C,IAAI,GAAGpH,QAAQ,CAAC6L,IAAT,CAAczE,IAAd,CAAmB,CAAnB,EAAsBiB,QAAnC;;AACA,kBAAIjB,IAAI,KAAK,OAAb,EAAsB;AACpB,uBAAI,CAAC/J,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,eAFD,MAEO;AACL,uBAAI,CAAC7B,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AACF,aAXH,EAYE,UAACgB,KAAD,EAAW;AACTzB,qBAAO,CAACC,GAAR,CAAYwB,KAAZ;AACD,aAdH;AAgBD;;;iBAED,wBAAe;AACb,iBAAK7C,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;;;;;;;yBA9BUuM,c,EAAc,mI,EAAA,4I,EAAA,uH;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA,iB;AAAA,e;AAAA,miB;AAAA;AAAA;;;ACR3B;;AACI;;AACI;;AAA0B;AAAA;;AAAA;;AAAA,qBAAY,IAAAE,KAAA,KAAZ;AAA4B,aAA5B;;AAEtB;;AACI;;AAAW;;AAAQ;;AACnB;;AACA;;AAAU;;AAAQ;;AACtB;;AAEA;;AACI;;AAAW;;AAAQ;;AACnB;;AACA;;AAAU;;AAAQ;;AACtB;;AAEA;;AAAsE;;AAAK;;AAC/E;;AAGJ;;AACA;;AACI;;AACA;;AAAqD;AAAA,qBAAS,IAAAI,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAiB;;AACnG;;AAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrBaC,sB;AAEX,wCAAoBlH,SAApB,EAA6C;AAAA;;AAAzB,eAAAA,SAAA,GAAAA,SAAA;AAA4B;;;;iBAEzC,sBAAalF,OAAb,EAA+B;AACpC,gBAAMuE,aAAa,GAAUvE,OAAO,CAACuE,aAArC;AAEA,gBAAM8H,yBAAyB,GAAiB,EAAhD;;AAEA,iBAAK,IAAIvJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,aAAa,CAACf,MAAlC,EAA0CV,CAAC,EAA3C,EAA+C;AAC7C,kBAAMwJ,aAAa,GAAG/H,aAAa,CAACzB,CAAD,CAAnC;AAEA,kBAAMyJ,SAAS,GAAG,KAAKC,aAAL,CAAmBF,aAAa,CAACG,OAAjC,EAA0CH,aAAa,CAACxG,IAAxD,CAAlB;AAEA,kBAAM4G,SAAS,GAAG,IAAIC,IAAJ,CAAS,CAACJ,SAAD,CAAT,EAAsBD,aAAa,CAAC1L,IAApC,EAA0C;AAAEkF,oBAAI,EAAEwG,aAAa,CAACxG;AAAtB,eAA1C,CAAlB;AAEA,kBAAM8G,eAAe,GAAe;AAClC7G,oBAAI,EAAE2G,SAD4B;AAElCtG,mBAAG,EAAE,KAAKlB,SAAL,CAAemB,sBAAf,CAAsCC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BkG,SAA3B,CAAtC;AAF6B,eAApC;AAKAL,uCAAyB,CAAC3N,IAA1B,CAA+BkO,eAA/B;AACD;;AAED5M,mBAAO,CAACuE,aAAR,GAAwB8H,yBAAxB;AACA,mBAAOrM,OAAP;AAED;;;iBAEM,uBAAc6M,QAAd,EAAwBC,SAAxB,EAAmC;AACxC,gBAAMC,UAAU,GAAGzG,MAAM,CAAC0G,IAAP,CAAYH,QAAZ,CAAnB;AACA,gBAAMI,WAAW,GAAG,IAAIC,WAAJ,CAAgBH,UAAU,CAACvJ,MAA3B,CAApB;AACA,gBAAM2J,SAAS,GAAG,IAAIC,UAAJ,CAAeH,WAAf,CAAlB;;AAEA,iBAAI,IAAInK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGiK,UAAU,CAACvJ,MAA9B,EAAsCV,CAAC,EAAvC,EAA2C;AACzCqK,uBAAS,CAACrK,CAAD,CAAT,GAAeiK,UAAU,CAACM,UAAX,CAAsBvK,CAAtB,CAAf;AACD;;AAED,gBAAMwK,IAAI,GAAG,IAAI3H,IAAJ,CAAS,CAACwH,SAAD,CAAT,EAAsB;AAAErH,kBAAI,EAAEgH;AAAR,aAAtB,CAAb;AACA,mBAAOQ,IAAP;AACD;;;;;;;yBAxCUlB,sB,EAAsB,8H;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAd,UAAI,sEAAYnI,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBsJ,eAAzB,CAAyC,yDAAzC,WACS,UAAAhO,GAAG;AAAA,eAAIV,OAAO,CAACyB,KAAR,CAAcf,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;;;ACFA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaiO,e;AACX,iCAAoBlG,eAApB,EACU7J,MADV,EACyB;AAAA;;AADL,eAAA6J,eAAA,GAAAA,eAAA;AACV,eAAA7J,MAAA,GAAAA,MAAA;AAAiB;;;;iBAE3B,mBACEgQ,GADF,EAEEC,IAFF,EAEmB;AAAA;;AAEjB,gBAAID,GAAG,CAACvF,OAAJ,CAAY3J,GAAZ,CAAgB,SAAhB,MAA+B,MAAnC,EAA2C;AACzC,qBAAOmP,IAAI,CAACC,MAAL,CAAYF,GAAG,CAACG,KAAJ,EAAZ,CAAP;AACD;;AAED,gBAAMC,KAAK,GAAG,KAAKvG,eAAL,CAAqBC,QAArB,EAAd;;AAEA,gBAAGsG,KAAH,EAAU;AACRJ,iBAAG,GAAG,KAAKK,QAAL,CAAcL,GAAd,EAAmBI,KAAnB,CAAN;AACD;;AAED,mBAAOH,IAAI,CAACC,MAAL,CAAYF,GAAZ,EAAiB5K,IAAjB,CACH,kEACI,UAACtD,GAAD,EAA2B;AACvBV,qBAAO,CAACC,GAAR,CAAYS,GAAG,CAACuH,MAAhB;;AACA,kBAAGvH,GAAG,CAACuH,MAAJ,KAAe,GAAlB,EAAuB;AACnB,uBAAI,CAACrJ,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACH,eAFD,MAEO,IAAGC,GAAG,CAACuH,MAAJ,KAAe,GAAlB,EAAuB;AAC1B,uBAAI,CAACrJ,MAAL,CAAY6B,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACH;;AACD,qBAAO,wDAAW,qBAAX,CAAP;AACH,aATL,CADG,CAAP;AAaD;;;iBAGO,kBAASyO,OAAT,EAAmCF,KAAnC,EAAiD;AACrD,mBAAOE,OAAO,CAACH,KAAR,CACH;AACII,wBAAU,EAAE;AACRC,6BAAa,mBAAaJ,KAAb;AADL;AADhB,aADG,CAAP;AAOH;;;;;;;yBA1CUL,e,EAAe,mI,EAAA,8G;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe;;;;;;;;;;;;;;;ACd5B,eAASU,wBAAT,CAAkCT,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOU,OAAO,CAAC1C,OAAR,GAAkB2C,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBb,GAAzB,GAA+B,GAAzC,CAAR;AACAY,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDH,8BAAwB,CAACM,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAN,8BAAwB,CAACzC,OAAzB,GAAmCyC,wBAAnC;AACAO,YAAM,CAACC,OAAP,GAAiBR,wBAAjB;AACAA,8BAAwB,CAACvL,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["import { ChangeDetectorRef, Component, Injector, NgZone, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n// import * as Razorpay from 'razorpay';\nimport { OrderDetails } from '../_model/order-details.model';\nimport { Product } from '../_model/product.model';\nimport { ProductService } from '../_services/product.service';\n\ndeclare var Razorpay: any;\n@Component({\n  selector: 'app-buy-product',\n  templateUrl: './buy-product.component.html',\n  styleUrls: ['./buy-product.component.css']\n})\nexport class BuyProductComponent implements OnInit {\n\n  isSingleProductCheckout: string = '';\n  productDetails: Product[] = [] ;\n\n  orderDetails: OrderDetails = {\n    fullName: '',\n    fullAddress: '',\n    contactNumber: '',\n    alternateContactNumber: '',\n    transactionId: '',\n    orderProductQuantityList: []\n  }\n\n  constructor(private activatedRoute: ActivatedRoute,\n    private productService: ProductService,\n    private router: Router,\n    private injector: Injector) { }\n\n  ngOnInit(): void {\n    this.productDetails = this.activatedRoute.snapshot.data['productDetails'];\n    this.isSingleProductCheckout = this.activatedRoute.snapshot.paramMap.get(\"isSingleProductCheckout\");\n    \n    this.productDetails.forEach(\n      x => this.orderDetails.orderProductQuantityList.push(\n        {productId: x.productId, quantity: 1}\n      )\n    );\n\n    console.log(this.productDetails)\n    console.log(this.orderDetails);\n  }\n\n  public placeOrder(orderForm: NgForm) {\n    this.productService.placeOrder(this.orderDetails, this.isSingleProductCheckout).subscribe(\n      (resp) => {\n        console.log(resp);\n        orderForm.reset();\n\n        const ngZone = this.injector.get(NgZone);\n        ngZone.run(\n          () => {\n            this.router.navigate([\"/orderConfirm\"]);\n          }\n        );\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n\n  getQuantityForProduct(productId) {\n    const filteredProduct = this.orderDetails.orderProductQuantityList.filter(\n      (productQuantity) => productQuantity.productId === productId\n    );\n\n    return filteredProduct[0].quantity;\n  }\n\n  getCalculatedTotal(productId, productDiscountedPrice) {\n    const filteredProduct = this.orderDetails.orderProductQuantityList.filter(\n      (productQuantity) => productQuantity.productId === productId\n    );\n\n    return filteredProduct[0].quantity * productDiscountedPrice;\n  }\n\n  onQuantityChanged(q, productId) {\n    this.orderDetails.orderProductQuantityList.filter(\n      (orderProduct) => orderProduct.productId === productId\n    )[0].quantity = q;\n  }\n\n  getCalculatedGrandTotal() {\n    let grandTotal = 0;\n\n    this.orderDetails.orderProductQuantityList.forEach(\n      (productQuantity) => {\n        const price = this.productDetails.filter(product => product.productId === productQuantity.productId)[0].productDiscountedPrice;\n        grandTotal = grandTotal + price * productQuantity.quantity;\n      }\n    );\n\n    return grandTotal;\n  }\n\n  createTransactionAndPlaceOrder(orderForm: NgForm) {\n    let amount = this.getCalculatedGrandTotal();\n    this.productService.createTransaction(amount).subscribe(\n      (response) => {\n        console.log(response);\n        this.openTransactioModal(response, orderForm);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n  }\n\n  openTransactioModal(response: any, orderForm: NgForm) {\n    var options = {\n      order_id: response.orderId,\n      key: response.key,\n      amount: response.amount,\n      currency: response.currency,\n      name: 'Learn programming yourself',\n      description: 'Payment of online shopping',\n      image: 'https://cdn.pixabay.com/photo/2023/01/22/13/46/swans-7736415_640.jpg',\n      handler: (response: any) => {\n        if(response!= null && response.razorpay_payment_id != null) {\n          this.processResponse(response, orderForm);\n        } else {\n          alert(\"Payment failed..\")\n        }\n       \n      },\n      prefill : {\n        name:'LPY',\n        email: 'LPY@GMAIL.COM',\n        contact: '90909090'\n      },\n      notes: {\n        address: 'Online Shopping'\n      },\n      theme: {\n        color: '#F37254'\n      }\n    };\n\n    var razorPayObject = new Razorpay(options);\n    razorPayObject.open();\n  }\n\n  processResponse(resp: any, orderForm:NgForm) {\n    this.orderDetails.transactionId = resp.razorpay_payment_id;\n    this.placeOrder(orderForm);\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"card p-3\">\n        <div class=\"row\">\n            <div class=\"col-6\">\n\n                <form #orderForm=\"ngForm\"\n                      (ngSubmit)=\"createTransactionAndPlaceOrder(orderForm)\">\n\n                    <mat-form-field appearance=\"outline\"\n                                    class=\"w-100\">\n                        <mat-label>Full name</mat-label>\n                        <input matInput\n                               placeholder=\"Full name\"\n                               [(ngModel)]=\"orderDetails.fullName\"\n                               name=\"fullName\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\"\n                                    class=\"w-100\">\n                        <mat-label>Full address</mat-label>\n                        <input matInput\n                               placeholder=\"Full address\"\n                               [(ngModel)]=\"orderDetails.fullAddress\"\n                               name=\"fullAddress\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\"\n                                    class=\"w-100\">\n                        <mat-label>Contact number</mat-label>\n                        <input matInput\n                               placeholder=\"Contact number\"\n                               [(ngModel)]=\"orderDetails.contactNumber\"\n                               name=\"contactNumber\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\"\n                                    class=\"w-100\">\n                        <mat-label>Alternate contact number</mat-label>\n                        <input matInput\n                               placeholder=\"Alternate contact number\"\n                               [(ngModel)]=\"orderDetails.alternateContactNumber\"\n                               name=\"alternateContactNumber\">\n                    </mat-form-field>\n\n                    <div align=\"right\">\n                        <button type=\"submit\" mat-stroked-button color=\"primary\">Place Order</button>\n                    </div>\n                </form>\n\n            </div>\n            <div class=\"col-6\">\n                <table class=\"table\">\n                    <thead class=\"thead\">\n                        <tr>\n                            <th>Name</th>\n                            <th>Amount</th>\n                            <th>Quantity</th>\n                            <th>Total</th>\n                        </tr>\n                    </thead>\n                    <tbody class=\"tbody\">\n                        <tr *ngFor=\"let product of productDetails\">\n                            <td>{{product.productName}}</td>\n                            <td>{{product.productDiscountedPrice}}</td>\n                            <td>\n                                <select \n                                #quantity\n                                class=\"form-select\"\n                                [ngModel]=\"getQuantityForProduct(product.productId)\"\n                                (change)=\"onQuantityChanged(quantity.value, product.productId)\"\n                                >\n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                </select>\n                            </td>\n                            <td>\n                                {{getCalculatedTotal(product.productId, product.productDiscountedPrice)}}\n                            </td>\n                        </tr>\n\n                        <tr>\n                            <td></td>\n                            <td></td>\n                            <td>Total</td>\n                            <td> {{getCalculatedGrandTotal()}} </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  register(registerForm: NgForm) {\n    console.log(registerForm.value);\n    this.userService.register(registerForm.value).subscribe(\n      (response) => {\n        this.router.navigate(['/login']);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"card\" style=\"padding: 20px;\">\n        <form #registerForm=\"ngForm\" (ngSubmit)=\"register(registerForm)\">\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Username</mat-label>\n                <input matInput\n                       ngModel\n                       name=\"userName\"\n                       id=\"userName\"\n                       placeholder=\"Username\">\n                <mat-hint>Username</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Firstname</mat-label>\n                <input matInput\n                       ngModel\n                       name=\"userFirstName\"\n                       id=\"userFirstName\"\n                       placeholder=\"Firstname\">\n                <mat-hint>Firstname</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Lastname</mat-label>\n                <input matInput\n                       ngModel\n                       name=\"userLastName\"\n                       id=\"userLastName\"\n                       placeholder=\"Lastname\">\n                <mat-hint>Lastname</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Password</mat-label>\n                <input matInput\n                       ngModel\n                       name=\"userPassword\"\n                       id=\"userPassword\"\n                       placeholder=\"Password\">\n                <mat-hint>Password</mat-hint>\n            </mat-form-field>\n\n            <div class=\"text-center\">\n                <button type=\"submit\" mat-raised-button color=\"primary\">Register</button>\n            </div>\n            \n        </form>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  message;\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.forUser();\n  }\n\n  forUser() {\n    this.userService.forUser().subscribe(\n      (response) => {\n        console.log(response);\n        this.message = response;\n      }, \n      (error)=>{\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"container mt-5\">\n    <div class=\"card text-center\" style=\"padding: 20px; color: red;\">\n        <h1>You are User</h1>\n        <h1>{{message}}</h1>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ImageProcessingService } from './image-processing.service';\nimport { Product } from './_model/product.model';\nimport { ProductService } from './_services/product.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuyProductResolverService implements Resolve<Product[]>{\n\n  // let isSingleProductCheckout = false;\n\n  constructor(private productServcice: ProductService,\n    private imageProcessingService: ImageProcessingService) { \n\n    }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Product[] | Observable<Product[]> | Promise<Product[]> {\n    \n    const id = route.paramMap.get(\"id\");\n    const isSingleProductCheckout = route.paramMap.get(\"isSingleProductCheckout\");\n    return this.productServcice.getProductDetails(isSingleProductCheckout, id)\n      .pipe(\n        map(\n          (x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product))\n        )\n      );\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { FileHandle } from '../_model/file-handle.model';\n\n@Component({\n  selector: 'app-show-product-images-dialog',\n  templateUrl: './show-product-images-dialog.component.html',\n  styleUrls: ['./show-product-images-dialog.component.css']\n})\nexport class ShowProductImagesDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n    this.receiveImages();\n  }\n\n  receiveImages() {\n    console.log(this.data);\n  }\n\n}\n","<mat-grid-list cols=\"4\" rowHeight=\"1:1\">\n    <mat-grid-tile *ngFor=\"let fileHandle of data.images\">\n        <img [src]=\"fileHandle.url\" width=\"150px\" height=\"150px\">\n    </mat-grid-tile>\n</mat-grid-list>","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { ImageProcessingService } from '../image-processing.service';\nimport { Product } from '../_model/product.model';\nimport { ProductService } from '../_services/product.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  images: string[] = [\n    'https://images.pexels.com/photos/884788/pexels-photo-884788.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/709552/pexels-photo-709552.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n    'https://images.pexels.com/photos/117139/pexels-photo-117139.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2'\n  ];\n  currentSlideIndex: number = 0;\n\n  nextSlide() {\n    debugger\n    this.currentSlideIndex = (this.currentSlideIndex + 1) % this.images.length;\n  }\n\n  prevSlide() {\n    debugger\n    this.currentSlideIndex = (this.currentSlideIndex - 1 + this.images.length) % this.images.length;\n  }\n\n  pageNumber: number = 0;\n\n  productDetails = [];\n\n  showLoadButton = false;\n\n  constructor(private productService: ProductService,\n    private imageProcessingService: ImageProcessingService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.getAllProducts();\n  }\n\n  searchByKeyword(searchkeyword) {\n    console.log(searchkeyword);\n    this.pageNumber = 0;\n    this.productDetails = [];\n    this.getAllProducts(searchkeyword);\n  }\n\n  public getAllProducts(searchKey: string = \"\") {\n    this.productService.getAllProducts(this.pageNumber, searchKey)\n    .pipe(\n      map((x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product)))\n    )\n    .subscribe(\n      (resp: Product[]) => {\n        console.log(resp);\n        if(resp.length == 12) {\n          this.showLoadButton = true;\n        } else {\n          this.showLoadButton = false;\n        }\n        resp.forEach(p => this.productDetails.push(p));\n      }, (error: HttpErrorResponse) => {\n        console.log(error);\n      }\n    );\n  }\n\n  public loadMoreProduct() {\n    this.pageNumber = this.pageNumber + 1;\n    this.getAllProducts();\n  }\n\n  showProductDetails(productId) {\n    this.router.navigate(['/productViewDetails', {productId: productId}]);\n  }\n}\n","\n\n\n<div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\n   <ol class=\"carousel-indicators\">\n     <li *ngFor=\"let image of images; let i = index\" [class.active]=\"i === 0\" [attr.data-slide-to]=\"i\"></li>\n   </ol>\n   <div class=\"carousel-inner\">\n     <div class=\"carousel-item\" *ngFor=\"let image of images; let i = index\" [class.active]=\"i === 0\">\n       <img class=\"d-block w-100\" [src]=\"image\" [alt]=\"'Slide ' + (i + 1)\">\n     </div>\n   </div>\n   <a class=\"carousel-control-prev\" (click)=\"prevSlide()\" role=\"button\" data-slide=\"prev\">\n     <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n     <span class=\"sr-only\">Previous</span>\n   </a>\n   <a class=\"carousel-control-next\" (click)=\"nextSlide()\" role=\"button\" data-slide=\"next\">\n     <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n     <span class=\"sr-only\">Next</span>\n   </a>\n </div>\n \n\n\n\n\n\n\n<div class=\"container mt-5\">\n\n   <mat-form-field appearance=\"outline\" class=\"w-100\">\n      <mat-label>Search any product</mat-label>\n      <input matInput #searchkeyword (keyup)=\"searchByKeyword(searchkeyword.value)\" name=\"searchKey\" id=\"searchKey\"\n         placeholder=\"Search any product\">\n      <mat-hint>Search any product</mat-hint>\n   </mat-form-field>\n\n   <mat-grid-list cols=\"4\" rowHeight=\"3:5\" gutterSize=\"10\">\n      <mat-grid-tile *ngFor=\"let p of productDetails\">\n         <div class=\"row p-5\">\n            <div class=\"image-container\">\n               <img class=\"home-page-product-image\" [src]=\"p.productImages[0].url\" alt=\"\">\n            </div>\n            <div class=\"mt-3\">\n               <p><b>{{p.productName}}</b></p>\n            </div>\n            <div class=\"mt-2\">\n               <p style=\"white-space: inherit; height: 40px; width: 288px; overflow: hidden; text-overflow: ellipsis;\">\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit. Eos sed eaque molestias iste repudiandae in\n                  quos distinctio rem excepturi expedita incidunt, doloremque id sequi perferendis ipsum. Maxime ad iste\n                  eius.</p>\n            </div>\n            <div class=\"mt-2\">\n               <b>Rs. {{p.productDiscountedPrice}}</b> &nbsp; <b\n                  style=\"text-decoration: line-through;\">{{p.productActualPrice}}</b>\n            </div>\n            <div class=\"mt-2\">\n               <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"showProductDetails(p.productId)\">View\n                  Details</button>\n            </div>\n         </div>\n      </mat-grid-tile>\n   </mat-grid-list>\n\n   <div class=\"text-center mt-5\" style=\"padding-bottom: 100px;\" *ngIf=\"showLoadButton\">\n      <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"loadMoreProduct()\"> Load more</button>\n   </div>\n\n   <div class=\"mt-5\">\n\n   </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Product } from './_model/product.model';\nimport { ProductService } from './_services/product.service';\nimport { ImageProcessingService } from './image-processing.service'\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ProductResolveService implements Resolve<Product> {\n  constructor(private productService: ProductService,\n    private imageProcessingService: ImageProcessingService) {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<Product> {\n    const id = route.paramMap.get(\"productId\");\n\n    if (id) {\n      //then we have to fetch details from backend\n       return this.productService.getProductDetailsById(id)\n              .pipe(\n                map(p => this.imageProcessingService.createImages(p))\n              );\n    } else {\n      // return empty product observable.\n      return of(this.getProductDetails());\n    }\n  }\n\n  getProductDetails() {\n    return {\n      productId:null,\n      productName: \"\",\n      productDescription: \"\",\n      productDiscountedPrice: 0,\n      productActualPrice: 0,\n      productImages: [],\n    };\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { ImageProcessingService } from '../image-processing.service';\nimport { ShowProductImagesDialogComponent } from '../show-product-images-dialog/show-product-images-dialog.component';\nimport { Product } from '../_model/product.model';\nimport { ProductService } from '../_services/product.service';\n\n@Component({\n  selector: 'app-show-product-details',\n  templateUrl: './show-product-details.component.html',\n  styleUrls: ['./show-product-details.component.css']\n})\nexport class ShowProductDetailsComponent implements OnInit {\n\n  showLoadMoreProductButton = false;\n  showTable = false;\n  pageNumber: number = 0;\n  productDetails: Product[] = [];\n  displayedColumns: string[] = ['Id', 'Product Name', 'description', 'Product Discounted Price', 'Product Actual Price', 'Actions'];\n\n  constructor(private productService: ProductService,\n    public imagesDialog: MatDialog,\n    private imageProcessingService: ImageProcessingService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.getAllProducts();\n  }\n\n  searchByKeyword(searchkeyword) {\n    console.log(searchkeyword);\n    this.pageNumber = 0;\n    this.productDetails = [];\n    this.getAllProducts(searchkeyword);\n  }\n\n  public getAllProducts(searchKeyword: string = \"\") {\n    this.showTable = false;\n    this.productService.getAllProducts(this.pageNumber, searchKeyword)\n    .pipe(\n      map((x: Product[], i) => x.map((product: Product) => this.imageProcessingService.createImages(product)))\n    )\n    .subscribe(\n      (resp: Product[]) => {\n        // console.log(resp);\n        resp.forEach(product => this.productDetails.push(product));\n        console.log('msg', this.productDetails);\n        this.showTable = true;\n\n        if(resp.length == 12) {\n          this.showLoadMoreProductButton = true;\n        } else {\n          this.showLoadMoreProductButton = false;\n        }\n\n        // this.productDetails = resp;\n      }, (error: HttpErrorResponse) => {\n        console.log(error);\n      }\n    );\n  }\n\n  loadMoreProduct() {\n    this.pageNumber = this.pageNumber + 1;\n    this.getAllProducts();\n  }\n\n  deleteProduct(productId) {\n    this.productService.deleteProduct(productId).subscribe(\n      (resp) => {\n        this.getAllProducts();\n      },\n      (error:HttpErrorResponse) => {\n        console.log(error);\n      }\n    );\n  }\n\n  showImages(product: Product) {\n    console.log(product);\n    this.imagesDialog.open(ShowProductImagesDialogComponent, {\n      data: {\n        images: product.productImages\n      },\n      height: '500px',\n      width: '800px'\n    });\n  }\n\n  editProductDetails(productId) {\n    this.router.navigate(['/addNewProduct', {productId: productId}]);\n  }\n}\n","<div class=\"mt-5 p-3\">\n\n  <mat-form-field appearance=\"outline\" class=\"w-100\">\n    <mat-label>Search any product</mat-label>\n    <input matInput\n           #searchkeyword\n           (keyup)=\"searchByKeyword(searchkeyword.value)\"\n           name=\"searchKey\"\n           id=\"searchKey\"\n           placeholder=\"Search any product\">\n    <mat-hint>Search any product</mat-hint>\n</mat-form-field>\n \n<div *ngIf=\"showTable\">\n\n\n<table mat-table [dataSource]=\"productDetails\" class=\"mat-elevation-z8\">\n  \n    <!-- Position Column -->\n    <ng-container matColumnDef=\"Id\">\n      <th mat-header-cell *matHeaderCellDef> Id </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.productId}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"Product Name\">\n      <th mat-header-cell *matHeaderCellDef> Product Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.productName}} </td>\n    </ng-container>\n  \n    <!-- Weight Column -->\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef> Product Description </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.productDescription}} </td>\n    </ng-container>\n  \n    <!-- Symbol Column -->\n    <ng-container matColumnDef=\"Product Discounted Price\">\n      <th mat-header-cell *matHeaderCellDef> Product Discounted Price </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.productDiscountedPrice}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Product Actual Price\">\n        <th mat-header-cell *matHeaderCellDef> Product Actual Price </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.productActualPrice}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"Actions\">\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\n      <td mat-cell *matCellDef=\"let element\"> \n        <button mat-icon-button color=\"primary\" (click)=\"showImages(element)\">\n          <mat-icon> images </mat-icon>\n        </button>    \n        <button mat-icon-button color=\"primary\" (click)=\"editProductDetails(element.productId)\">\n          <mat-icon> edit </mat-icon>\n        </button>\n        <button mat-icon-button color=\"warn\" (click)=\"deleteProduct(element.productId)\">\n          <mat-icon> delete </mat-icon>\n        </button> \n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n\n</div>\n\n<div class=\"text-center p-5\" *ngIf=\"showLoadMoreProductButton\">\n  <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"loadMoreProduct()\">Load more</button>\n</div>\n\n</div>\n","<div class=\"container mt-5\">\n    <div class=\"card p-2\">\n\n        <div class=\"row\">\n            <div class=\"col-6\">\n\n                <form #productForm=\"ngForm\"\n                      (ngSubmit)=\"addProduct(productForm)\">\n\n                    <mat-form-field appearance=\"outline\"\n                                    class=\"w-100\">\n                        <mat-label>Product Name</mat-label>\n                        <input matInput\n                               placeholder=\"Product Name\"\n                               [(ngModel)]=\"product.productName\"\n                               name=\"productName\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\"\n                                    class=\"w-100\">\n                        <mat-label>Product Description</mat-label>\n                        <input matInput\n                               placeholder=\"Product Description\"\n                               [(ngModel)]=\"product.productDescription\"\n                               name=\"productDescription\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\"\n                                    class=\"w-100\">\n                        <mat-label>Product Actual Price</mat-label>\n                        <input matInput\n                               placeholder=\"Product Actual Price\"\n                               [(ngModel)]=\"product.productActualPrice\"\n                               name=\"productActualPrice\">\n                    </mat-form-field>\n\n                    <mat-form-field appearance=\"outline\"\n                                    class=\"w-100\">\n                        <mat-label>Product Discounted Price</mat-label>\n                        <input matInput\n                               placeholder=\"Product Discounted Price\"\n                               [(ngModel)]=\"product.productDiscountedPrice\"\n                               name=\"productDiscountedPrice\">\n                    </mat-form-field>\n\n                    <div align=\"end\">\n                        <button mat-stroked-button\n                                color=\"primary\"\n                                style=\"margin-right: 3px;\">Clear</button>\n                        <button type=\"submit\" *ngIf=\"isNewProduct\"\n                                mat-stroked-button\n                                color=\"primary\">Add Product</button>\n                        <button type=\"submit\" *ngIf=\"!isNewProduct\"\n                                mat-stroked-button\n                                color=\"primary\">Update Product</button>\n                    </div>\n\n                </form>\n\n            </div>\n            <div class=\"col-6\">\n                <div>\n                    <div class=\"dropzone\"\n                         appDrag\n                         (files)=\"fileDropped($event)\">\n                        <div class=\"text-wrapper\">\n                            <div class=\"centered\">\n                                Drag and drop your file or\n                                <a (click)=\"selectFile.click()\"\n                                   class=\"browse-button\">browse</a>\n                                a file\n                            </div>\n\n                        </div>\n                    </div>\n                    <input multiple\n                           type=\"file\"\n                           style=\"display: none;\"\n                           #selectFile\n                           value=\"select\"\n                           (change)=\"onFileSelected($event)\">\n                </div>\n                <div class=\"mt-5\">\n                    <div class=\"row\">\n                        <mat-grid-list cols=\"4\"\n                                       rowHeight=\"1:1\">\n                            <mat-grid-tile *ngFor=\"let file of product.productImages; let i = index;\">\n                                <div style=\"position: relative\">\n                                    <span class=\"btn-remove-image\"\n                                          (click)=\"removeImages(i)\">x</span>\n                                    <img [src]=\"file.url\"\n                                         width=\"100px\"\n                                         height=\"100px\">\n                                </div>\n                            </mat-grid-tile>\n                        </mat-grid-list>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>","import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { FileHandle } from \"../_model/file-handle.model\";\nimport { Product } from \"../_model/product.model\";\nimport { ProductService } from \"../_services/product.service\";\n\n@Component({\n  selector: \"app-add-new-product\",\n  templateUrl: \"./add-new-product.component.html\",\n  styleUrls: [\"./add-new-product.component.css\"],\n})\nexport class AddNewProductComponent implements OnInit {\n  isNewProduct = true;\n\n  product: Product = {\n    productId: null,\n    productName: \"\",\n    productDescription: \"\",\n    productDiscountedPrice: 0,\n    productActualPrice: 0,\n    productImages: [],\n  };\n\n  constructor(\n    private productService: ProductService,\n    private sanitizer: DomSanitizer,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.product = this.activatedRoute.snapshot.data['product'];\n\n    if(this.product && this.product.productId) {\n      this.isNewProduct = false;\n    }\n  }\n\n  addProduct(productForm: NgForm) {\n    const formData = this.prepareFormDataForProduct(this.product);\n    this.productService.addProduct(formData).subscribe(\n      (response: Product) => {\n        productForm.reset();\n        this.product.productImages = [];\n      },\n      (error: HttpErrorResponse) => {\n        console.log(error);\n      }\n    );\n  }\n\n  prepareFormDataForProduct(product: Product): FormData {\n    const uploadImageData = new FormData();\n    uploadImageData.append(\n      \"product\",\n      new Blob([JSON.stringify(product)], { type: \"application/json\" })\n    );\n\n    for (var i = 0; i < this.product.productImages.length; i++) {\n      uploadImageData.append(\n        \"imageFile\",\n        this.product.productImages[i].file,\n        this.product.productImages[i].file.name\n      );\n    }\n    return uploadImageData;\n  }\n\n  onFileSelected(event: any) {\n    if (event.target.files) {\n      const file = event.target.files[0];\n      const fileHandle: FileHandle = {\n        file: file,\n        url: this.sanitizer.bypassSecurityTrustUrl(\n          window.URL.createObjectURL(file)\n        ),\n      };\n      this.product.productImages.push(fileHandle);\n    }\n  }\n\n  removeImages(i: number) {\n    this.product.productImages.splice(i, 1);\n  }\n\n  fileDropped(fileHandle: FileHandle) {\n    this.product.productImages.push(fileHandle);\n  }\n}\n","<div class=\"container mt-5\">\n  <mat-button-toggle-group  aria-label=\"Font Style\">\n    <mat-button-toggle value=\"All\" (click)=\"getAllOrderDetailsForAdmin('All')\">All</mat-button-toggle>\n    <mat-button-toggle value=\"Placed\" (click)=\"getAllOrderDetailsForAdmin('Placed')\">Placed</mat-button-toggle>\n    <mat-button-toggle value=\"Delivered\" (click)=\"getAllOrderDetailsForAdmin('Delivered')\" >Delivered</mat-button-toggle>\n  </mat-button-toggle-group>\n\n<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 mt-3\">\n\n    <ng-container matColumnDef=\"Id\">\n      <th mat-header-cell *matHeaderCellDef> Id </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderId}} </td>\n    </ng-container>\n  \n    <!-- Product Name Column -->\n    <ng-container matColumnDef=\"Product Name\">\n      <th mat-header-cell *matHeaderCellDef> Product Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.product.productName}} </td>\n    </ng-container>\n  \n    <!-- Name Column -->\n    <ng-container matColumnDef=\"Name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.user.userFirstName}} </td>\n    </ng-container>\n  \n    <!-- Address Column -->\n    <ng-container matColumnDef=\"Address\">\n      <th mat-header-cell *matHeaderCellDef> Address </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.orderFullOrder}} </td>\n    </ng-container>\n\n     <!-- Contact No. Column -->\n     <ng-container matColumnDef=\"Contact No.\">\n        <th mat-header-cell *matHeaderCellDef> Contact No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderContactNumber}} </td>\n      </ng-container>\n\n       <!-- orderStatus Column -->\n     <ng-container matColumnDef=\"Status\">\n        <th mat-header-cell *matHeaderCellDef> Status </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.orderStatus}} </td>\n      </ng-container>\n\n       <!-- Action Column -->\n     <ng-container matColumnDef=\"Action\">\n      <th mat-header-cell *matHeaderCellDef> Action </th>\n      <td mat-cell *matCellDef=\"let element\"> \n          <button *ngIf=\"element.orderStatus == 'Placed'\" mat-raised-button color=\"primary\" (click)=\"markAsDelivered(element.orderId)\">Mark as Delivered</button>  \n      </td>\n    </ng-container>\n  \n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>  \n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../_services/product.service';\n\n@Component({\n  selector: 'app-order-details',\n  templateUrl: './order-details.component.html',\n  styleUrls: ['./order-details.component.css']\n})\nexport class OrderDetailsComponent implements OnInit {\n\n  displayedColumns: string[] = ['Id', 'Product Name', 'Name', 'Address', 'Contact No.', 'Status', 'Action'];\n  dataSource = [];\n\n  status: string = 'All';\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.getAllOrderDetailsForAdmin(this.status);\n  }\n\n  getAllOrderDetailsForAdmin(statusParameter: string) {\n    this.productService.getAllOrderDetailsForAdmin(statusParameter).subscribe(\n      (resp) => {\n        this.dataSource = resp;\n        console.log(resp);\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  markAsDelivered(orderId) {\n    console.log(orderId);\n    this.productService.markAsDelivered(orderId).subscribe(\n      (response) => {\n        this.getAllOrderDetailsForAdmin(this.status);\n        console.log(response);\n      }, (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'jwt-youtube-ui';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div class=\"card text-center\" style=\"color: green; padding: 20px;\">\n        <h1>You are Admin</h1>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserAuthService } from '../_services/user-auth.service';\nimport { UserService } from '../_services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private userAuthService: UserAuthService,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.userAuthService.getToken() !== null) {\n      const role = route.data['roles'] as Array<string>;\n\n      if (role) {\n        const match = this.userService.roleMatch(role);\n\n        if (match) {\n          return true;\n        } else {\n          this.router.navigate(['/forbidden']);\n          return false;\n        }\n      }\n    }\n\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserAuthService } from './user-auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  PATH_OF_API = 'http://localhost:9090';\n\n  requestHeader = new HttpHeaders({ 'No-Auth': 'True' });\n  constructor(\n    private httpclient: HttpClient,\n    private userAuthService: UserAuthService\n  ) {}\n\n  public register(registerData) {\n    return this.httpclient.post(this.PATH_OF_API + '/registerNewUser', registerData);\n  }\n\n  public login(loginData) {\n    return this.httpclient.post(this.PATH_OF_API + '/authenticate', loginData, {\n      headers: this.requestHeader,\n    });\n  }\n\n  public forUser() {\n    return this.httpclient.get(this.PATH_OF_API + '/forUser', {\n      responseType: 'text',\n    });\n  }\n\n\n  public forAdmin() {\n    return this.httpclient.get(this.PATH_OF_API + '/forAdmin', {\n      responseType: 'text',\n    });\n  }\n\n  public roleMatch(allowedRoles): boolean {\n    let isMatch = false;\n    const userRoles: any = this.userAuthService.getRoles();\n\n    if (userRoles != null && userRoles) {\n      for (let i = 0; i < userRoles.length; i++) {\n        for (let j = 0; j < allowedRoles.length; j++) {\n          if (userRoles[i].roleName === allowedRoles[j]) {\n            isMatch = true;\n            return isMatch;\n          } else {\n            return isMatch;\n          }\n        }\n      }\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard } from './_auth/auth.guard';\nimport { AuthInterceptor } from './_auth/auth.interceptor';\nimport { UserService } from './_services/user.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { AddNewProductComponent } from './add-new-product/add-new-product.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport { DragDirective } from './drag.directive';\nimport { ShowProductDetailsComponent } from './show-product-details/show-product-details.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatIconModule} from '@angular/material/icon';\nimport { ShowProductImagesDialogComponent } from './show-product-images-dialog/show-product-images-dialog.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { ProductViewDetailsComponent } from './product-view-details/product-view-details.component';\nimport { BuyProductComponent } from './buy-product/buy-product.component';\nimport { OrderConfirmationComponent } from './order-confirmation/order-confirmation.component';\nimport { RegisterComponent } from './register/register.component';\nimport { CartComponent } from './cart/cart.component';\nimport { MyOrdersComponent } from './my-orders/my-orders.component';\nimport { OrderDetailsComponent } from './order-details/order-details.component';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AdminComponent,\n    UserComponent,\n    LoginComponent,\n    HeaderComponent,\n    ForbiddenComponent,\n    AddNewProductComponent,\n    DragDirective,\n    ShowProductDetailsComponent,\n    ShowProductImagesDialogComponent,\n    ProductViewDetailsComponent,\n    BuyProductComponent,\n    OrderConfirmationComponent,\n    RegisterComponent,\n    CartComponent,\n    MyOrdersComponent,\n    OrderDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatGridListModule,\n    MatTableModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonToggleModule\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass:AuthInterceptor,\n      multi:true\n    },\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"container mt-5\">\n    <div align=\"right\" class=\"mb-3\">\n        <button (click)=\"checkout()\" color=\"primary\" mat-raised-button>Checkout</button>\n    </div>\n    <table mat-table\n           [dataSource]=\"cartDetails\"\n           class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"Name\">\n            <th mat-header-cell\n                *matHeaderCellDef> Name </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.product.productName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Description\">\n            <th mat-header-cell\n                *matHeaderCellDef> Description </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.product.productDescription}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Price\">\n            <th mat-header-cell\n                *matHeaderCellDef> Price </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.product.productActualPrice}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Discounted Price\">\n            <th mat-header-cell\n                *matHeaderCellDef> Discounted Price </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.product.productDiscountedPrice}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Action\">\n            <th mat-header-cell\n                *matHeaderCellDef> Action </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> \n                <button mat-raised-button color=\"warn\" (click)=\"delete(element.cartId)\">Delete</button>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row\n            *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row\n            *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProductService } from '../_services/product.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  displayedColumns: string[] = ['Name', 'Description', 'Price', 'Discounted Price', 'Action'];\n\n  cartDetails: any[] = [];\n\n  constructor(private productService: ProductService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.getCartDetails();\n  }\n\n  delete(cartId) {\n    console.log(cartId);\n    this.productService.deleteCartItem(cartId).subscribe(\n      (resp) => {\n        console.log(resp);\n        this.getCartDetails();\n      }, (err) => {\n        console.log(err);\n      }\n    );\n  }\n\n  getCartDetails() {\n    this.productService.getCartDetails().subscribe(\n      (response:any[]) => {\n        console.log(response);\n        this.cartDetails = response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  checkout() {\n    \n    this.router.navigate(['/buyProduct', {\n      isSingleProductCheckout: false, id: 0\n    }]);\n\n    // this.productService.getProductDetails(false, 0).subscribe(\n    //   (resp) => {\n    //     console.log(resp);\n    //   }, (err) => {\n    //     console.log(err);\n    //   }\n    // );\n  }\n}\n","import { Directive, HostBinding, HostListener, Output } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { EventEmitter } from \"@angular/core\";\nimport { FileHandle } from \"./_model/file-handle.model\";\n\n@Directive({\n  selector: \"[appDrag]\",\n})\nexport class DragDirective {\n  @Output() files: EventEmitter<FileHandle> = new EventEmitter();\n\n  @HostBinding(\"style.background\") private background = \"#eee\";\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  @HostListener(\"dragover\", [\"$event\"])\n  public onDragOver(evt: DragEvent) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = \"#999\";\n  }\n\n  @HostListener(\"dragleave\", [\"$event\"])\n  public onDragLeave(evt: DragEvent) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = \"#eee\";\n  }\n\n  @HostListener(\"drop\", [\"$event\"])\n  public onDrop(evt: DragEvent) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.background = \"#eee\";\n\n    let fileHandle: FileHandle = null;\n\n    const file = evt.dataTransfer.files[0];\n    const url = this.sanitizer.bypassSecurityTrustUrl(\n      window.URL.createObjectURL(file)\n    );\n\n    fileHandle = { file, url };\n    this.files.emit(fileHandle);\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>\n    E-Commerce Application\n  </span>\n\n  <span class=\"space-buttons\"></span>\n  <button *ngIf=\"! isLoggedIn()\" routerLink=\"/login\" mat-raised-button color=\"primary\">\n    Login\n  </button>\n  <button *ngIf=\"isLoggedIn()\" (click)=\"logout()\" mat-raised-button color=\"warn\">\n    Logout\n  </button>\n</mat-toolbar>\n\n<mat-toolbar color=\"primary\" *ngIf=\"isLoggedIn()\">\n  <button mat-raised-button color=\"primary\" routerLink=\"/\">Home</button>\n  <button *ngIf=\"!isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/cart\">Cart</button>\n  <button *ngIf=\"!isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/myOrders\">My Orders</button>\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/addNewProduct\">Add New Product</button>\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/showProductDetails\">Show Product Details</button>\n  <button *ngIf=\"isAdmin()\" mat-raised-button color=\"primary\" routerLink=\"/orderInformation\">Order Information</button>\n</mat-toolbar>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserAuthService } from '../_services/user-auth.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(\n    private userAuthService: UserAuthService,\n    private router: Router,\n    public userService: UserService\n  ) {}\n\n  ngOnInit(): void {}\n\n  public isLoggedIn() {\n    return this.userAuthService.isLoggedIn();\n  }\n\n  public logout() {\n    this.userAuthService.clear();\n    this.router.navigate(['/']);\n  }\n\n  public isAdmin() {\n    return this.userAuthService.isAdmin();\n  }\n\n  public isUser() {\n    return this.userAuthService.isUser();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAuthService {\n  constructor() {}\n\n  public setRoles(roles: []) {\n    localStorage.setItem('roles', JSON.stringify(roles));\n  }\n\n  public getRoles(): [] {\n    return JSON.parse(localStorage.getItem('roles'));\n  }\n\n  public setToken(jwtToken: string) {\n    localStorage.setItem('jwtToken', jwtToken);\n  }\n\n  public getToken(): string {\n    return localStorage.getItem('jwtToken');\n  }\n\n  public clear() {\n    localStorage.clear();\n  }\n\n  public isLoggedIn() {\n    return this.getRoles() && this.getToken();\n  }\n\n  public isAdmin() {\n    const roles: any[] = this.getRoles();\n    return roles[0].roleName === 'Admin';\n  }\n\n  public isUser() {\n    const roles: any[] = this.getRoles();\n    return roles[0].roleName === 'User';\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order-confirmation',\n  templateUrl: './order-confirmation.component.html',\n  styleUrls: ['./order-confirmation.component.css']\n})\nexport class OrderConfirmationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div class=\"card p-5 text-center\">\n       <h1>Your order is place successfully. It will get delivered to you within 4-5 business days.</h1>\n    </div>\n</div>","<div class=\"container mt-5\">\n\n    <div class=\"row\">\n        <div class=\"col-6\">\n\n            <div class=\"card image-container p-3\">\n                <img [src]=\"product.productImages[selectedProductIndex].url\" class=\"product-zoom-image\">\n            </div>\n\n            <div class=\"mt-2\">\n                <mat-grid-list cols=\"3\" gutterSize=\"10\" rowHeight=\"1:1\">\n                    <mat-grid-tile *ngFor=\"let file of product.productImages; let i = index;\" (click)=\"changeIndex(i)\" style=\"border: 1px solid lightgrey; cursor: pointer;\">\n                        <img [src]=\"file.url\" height=\"100px\" >\n                    </mat-grid-tile>\n                </mat-grid-list>\n            </div>\n           \n        </div>\n        <div class=\"col-6\">\n            <div class=\"product-information\">\n                <div class=\"mt-3\">\n                    <h2>{{product.productName}}</h2>\n                </div>\n                <div class=\"mt-3\">\n                    Description: <br>\n                    {{product.productDescription}}\n                </div>\n                <div class=\"mt-3\">\n                    <b>Rs. {{product.productDiscountedPrice}}</b>&nbsp;&nbsp;<b style=\"text-decoration: line-through;\">{{product.productActualPrice}}</b>\n                </div>\n                <div class=\"mt-5 text-center\">\n                    <button mat-raised-button color=\"warn\" style=\"width: 200px;\" (click)=\"buyProduct(product.productId)\"> Buy Now</button>\n                    &nbsp;\n                    <button mat-raised-button style=\"width: 200px;\" (click)=\"addToCart(product.productId)\">Add to Cart</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from '../_model/product.model';\nimport { ProductService } from '../_services/product.service';\n\n@Component({\n  selector: 'app-product-view-details',\n  templateUrl: './product-view-details.component.html',\n  styleUrls: ['./product-view-details.component.css']\n})\nexport class ProductViewDetailsComponent implements OnInit {\n\n  selectedProductIndex = 0;\n\n  product: Product;\n\n  constructor(private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.product = this.activatedRoute.snapshot.data['product'];\n    console.log(this.product)\n  }\n\n  addToCart(productId) {\n    this.productService.addToCart(productId).subscribe(\n      (response) => {\n        console.log(response);\n      }, (error)=> {\n        console.log(error);\n      }\n    );\n  }\n\n  changeIndex(index) {\n    this.selectedProductIndex = index;\n  }\n\n  buyProduct(productId) {\n    this.router.navigate(['/buyProduct', {\n      isSingleProductCheckout: true, id: productId\n    }]);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.css']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container mt-5\">\n    <div class=\"card text-center\" style=\"padding:20px;\">\n        <h1>You are not allowed to access this page</h1>\n    </div>\n</div>","<div class=\"container mt-5\">\n    <table mat-table\n           [dataSource]=\"myOrderDetails\"\n           class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"Name\">\n            <th mat-header-cell\n                *matHeaderCellDef> Name </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.orderFullName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Address\">\n            <th mat-header-cell\n                *matHeaderCellDef> Address </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.orderFullOrder}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Contact No.\">\n            <th mat-header-cell\n                *matHeaderCellDef> Contact No. </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.orderContactNumber}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Amount\">\n            <th mat-header-cell\n                *matHeaderCellDef> Amount </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.orderAmount}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Status\">\n            <th mat-header-cell\n                *matHeaderCellDef> Status </th>\n            <td mat-cell\n                *matCellDef=\"let element\"> {{element.orderStatus}} </td>\n        </ng-container>\n\n\n        <tr mat-header-row\n            *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row\n            *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MyOrderDetails } from '../_model/order.model';\nimport { ProductService } from '../_services/product.service';\n\n@Component({\n  selector: 'app-my-orders',\n  templateUrl: './my-orders.component.html',\n  styleUrls: ['./my-orders.component.css']\n})\nexport class MyOrdersComponent implements OnInit {\n\n  displayedColumns = [\"Name\", \"Address\", \"Contact No.\", \"Amount\", \"Status\"];\n\n  myOrderDetails: MyOrderDetails[] = [];\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.getOrderDetails();\n  }\n\n  getOrderDetails() {\n    this.productService.getMyOrders().subscribe(\n      (resp: MyOrderDetails[]) => {\n        console.log(resp);\n        this.myOrderDetails = resp;\n      }, (err)=> {\n        console.log(err);\n      }\n    );\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetails } from '../_model/order-details.model';\nimport { MyOrderDetails } from '../_model/order.model';\nimport { Product } from '../_model/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  public createTransaction(amount) {\n    return this.httpClient.get(\"http://localhost:9090/createTransaction/\"+amount);\n  }\n\n  public markAsDelivered(orderId) {\n      return this.httpClient.get(\"http://localhost:9090/markOrderAsDelivered/\"+orderId)\n  }\n\n  public getAllOrderDetailsForAdmin(status: string): Observable<MyOrderDetails[]> {\n    return this.httpClient.get<MyOrderDetails[]>(\"http://localhost:9090/getAllOrderDetails/\"+status);\n  }\n\n  public getMyOrders(): Observable<MyOrderDetails[]> {\n    return this.httpClient.get<MyOrderDetails[]>(\"http://localhost:9090/getOrderDetails\");\n  }\n\n  public deleteCartItem(cartId) {\n    return this.httpClient.delete(\"http://localhost:9090/deleteCartItem/\"+cartId);\n  }\n\n  public addProduct(product: FormData) {\n    return this.httpClient.post<Product>(\"http://localhost:9090/addNewProduct\", product);\n  }\n\n  public getAllProducts(pageNumber, searchKeyword: string = \"\") {\n    return this.httpClient.get<Product[]>(\"http://localhost:9090/getAllProducts?pageNumber=\"+pageNumber+\"&searchKey=\"+searchKeyword);\n  }\n\n  public getProductDetailsById(productId) {\n    return this.httpClient.get<Product>(\"http://localhost:9090/getProductDetailsById/\"+productId);\n  }\n\n  public deleteProduct(productId: number) {\n    return this.httpClient.delete(\"http://localhost:9090/deleteProductDetails/\"+productId);\n  }\n\n  public getProductDetails(isSingleProductCheckout, productId) {\n    return this.httpClient.get<Product[]>(\"http://localhost:9090/getProductDetails/\"+isSingleProductCheckout+\"/\"+productId);\n  }\n\n  public placeOrder(orderDetails: OrderDetails, isCartCheckout) {\n    return this.httpClient.post(\"http://localhost:9090/placeOrder/\"+isCartCheckout, orderDetails);\n  }\n\n  public addToCart(productId) {\n    return this.httpClient.get(\"http://localhost:9090/addToCart/\"+productId);\n  }\n\n  public getCartDetails() {\n    return this.httpClient.get(\"http://localhost:9090/getCartDetails\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AddNewProductComponent } from \"./add-new-product/add-new-product.component\";\nimport { AdminComponent } from \"./admin/admin.component\";\nimport { BuyProductResolverService } from \"./buy-product-resolver.service\";\nimport { BuyProductComponent } from \"./buy-product/buy-product.component\";\nimport { CartComponent } from \"./cart/cart.component\";\nimport { ForbiddenComponent } from \"./forbidden/forbidden.component\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { MyOrdersComponent } from \"./my-orders/my-orders.component\";\nimport { OrderConfirmationComponent } from \"./order-confirmation/order-confirmation.component\";\nimport { OrderDetailsComponent } from \"./order-details/order-details.component\";\nimport { ProductResolveService } from \"./product-resolve.service\";\nimport { ProductViewDetailsComponent } from \"./product-view-details/product-view-details.component\";\nimport { RegisterComponent } from \"./register/register.component\";\nimport { ShowProductDetailsComponent } from \"./show-product-details/show-product-details.component\";\nimport { UserComponent } from \"./user/user.component\";\nimport { AuthGuard } from \"./_auth/auth.guard\";\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  {\n    path: \"admin\",\n    component: AdminComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"Admin\"] },\n  },\n  {\n    path: \"user\",\n    component: UserComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"User\"] },\n  },\n  { path: \"login\", component: LoginComponent },\n  { path: \"forbidden\", component: ForbiddenComponent },\n  {\n    path: \"addNewProduct\",\n    component: AddNewProductComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"Admin\"] },\n    resolve: {\n      product: ProductResolveService,\n    },\n  },\n  {\n    path: \"showProductDetails\",\n    component: ShowProductDetailsComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"Admin\"] },\n  },\n  {\n    path: \"orderInformation\",\n    component: OrderDetailsComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"Admin\"] },\n  },\n  {\n    path: \"productViewDetails\",\n    component: ProductViewDetailsComponent,\n    resolve: { product: ProductResolveService },\n  },\n  {\n    path: \"buyProduct\",\n    component: BuyProductComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"User\"] },\n    resolve: {\n      productDetails: BuyProductResolverService,\n    },\n  },\n  {\n    path: \"cart\",\n    component: CartComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"User\"] }\n  },\n  {\n    path:\"orderConfirm\",\n    component: OrderConfirmationComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"User\"] }\n  },\n  {\n    path:\"myOrders\",\n    component: MyOrdersComponent,\n    canActivate: [AuthGuard],\n    data: { roles: [\"User\"] }\n  },\n  {\n    path: \"register\",\n    component: RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserAuthService } from '../_services/user-auth.service';\nimport { UserService } from '../_services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private userService: UserService,\n    private userAuthService: UserAuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  login(loginForm: NgForm) {\n    this.userService.login(loginForm.value).subscribe(\n      (response: any) => {\n        this.userAuthService.setRoles(response.user.role);\n        this.userAuthService.setToken(response.jwtToken);\n\n        const role = response.user.role[0].roleName;\n        if (role === 'Admin') {\n          this.router.navigate(['/admin']);\n        } else {\n          this.router.navigate(['/user']);\n        }\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  registerUser() {\n    this.router.navigate(['/register']);\n  }\n}\n","\n\n\n<div class=\"container mt-5\">\n    <div class=\"card\" style=\"padding: 20px;\">\n        <form #loginForm=\"ngForm\" (ngSubmit)=\"login(loginForm)\">\n\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Username</mat-label>\n                <input matInput ngModel name=\"userName\" id=\"userName\" placeholder=\"Username\">\n                <mat-hint>Username</mat-hint>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                <mat-label>Password</mat-label>\n                <input type=\"password\" matInput ngModel name=\"userPassword\" id=\"userPassword\" placeholder=\"Password\">\n                <mat-hint>Password</mat-hint>\n            </mat-form-field>\n\n            <button class=\"w-100\" type=\"submit\" mat-raised-button color=\"primary\">Login</button>\n        </form>\n\n\n    </div>\n    <div class=\"text-center\">\n        <br>\n        <button class=\"w-20\" mat-raised-button type=\"button\" (click)=\"registerUser()\">Create an account</button>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FileHandle } from './_model/file-handle.model';\nimport { Product } from './_model/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageProcessingService {\n\n  constructor(private sanitizer: DomSanitizer) { }\n\n  public createImages(product: Product) {\n    const productImages: any[] = product.productImages;\n\n    const productImagesToFileHandle: FileHandle[] = [];\n\n    for (let i = 0; i < productImages.length; i++) {\n      const imageFileData = productImages[i];\n\n      const imageBlob = this.dataURItoBlob(imageFileData.picByte, imageFileData.type);\n\n      const imageFile = new File([imageBlob], imageFileData.name, { type: imageFileData.type });\n\n      const finalFileHandle :FileHandle = {\n        file: imageFile,\n        url: this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(imageFile))\n      };\n\n      productImagesToFileHandle.push(finalFileHandle);\n    }\n\n    product.productImages = productImagesToFileHandle;\n    return product;\n\n  }\n\n  public dataURItoBlob(picBytes, imageType) {\n    const byteString = window.atob(picBytes);\n    const arrayBuffer = new ArrayBuffer(byteString.length);\n    const int8Array = new Uint8Array(arrayBuffer);\n\n    for(let i = 0; i < byteString.length; i++) {\n      int8Array[i] = byteString.charCodeAt(i);\n    }\n\n    const blob = new Blob([int8Array], { type: imageType});\n    return blob;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {\n    HttpErrorResponse,\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { UserAuthService } from '../_services/user-auth.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private userAuthService: UserAuthService,\n    private router:Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (req.headers.get('No-Auth') === 'True') {\n      return next.handle(req.clone());\n    }\n\n    const token = this.userAuthService.getToken();\n\n    if(token) {\n      req = this.addToken(req, token);\n    }\n    \n    return next.handle(req).pipe(\n        catchError(\n            (err:HttpErrorResponse) => {\n                console.log(err.status);\n                if(err.status === 401) {\n                    this.router.navigate(['/login']);\n                } else if(err.status === 403) {\n                    this.router.navigate(['/forbidden']);\n                }\n                return throwError(\"Some thing is wrong\");\n            }\n        )\n    );\n  }\n\n\n  private addToken(request:HttpRequest<any>, token:string) {\n      return request.clone(\n          {\n              setHeaders: {\n                  Authorization : `Bearer ${token}`\n              }\n          }\n      );\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}